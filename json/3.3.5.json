[{"id":"/sicpjs/3.3.5","tag":"TITLE","body":"3.3.5  \n    Propagation of Constraints"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    Computer programs are traditionally organized as\n    one-directional computations, which perform operations on prespecified\n    arguments to produce desired outputs.  On the other hand, we often\n    model systems in terms of relations among quantities.  For example, a\n    mathematical model of a mechanical structure might include the\n    information that the deflection ","tag":"#text"},{"body":"$d$","tag":"LATEX"},{"body":" of a metal\n    rod is related to the force ","tag":"#text"},{"body":"$F$","tag":"LATEX"},{"body":" on the rod, the\n    length ","tag":"#text"},{"body":"$L$","tag":"LATEX"},{"body":" of the rod, the cross-sectional\n    area ","tag":"#text"},{"body":"$A$","tag":"LATEX"},{"body":", and the elastic modulus\n    ","tag":"#text"},{"body":"$E$","tag":"LATEX"},{"body":" via the equation\n    ","tag":"#text"},{"body":"\n      \\[\n      \\begin{array}{lll}\n      d A E & = & F L\n      \\end{array}\n      \\]\n    ","tag":"LATEX"},{"body":"\n    Such an equation is not one-directional.  Given any four of the\n    quantities, we can use it to compute the fifth.  Yet translating the\n    equation into a traditional computer language would force us to choose\n    one of the quantities to be computed in terms of the other four.\n    Thus, a\n    function\n    for computing the area ","tag":"#text"},{"body":"$A$","tag":"LATEX"},{"body":" could not be used to\n    compute the deflection ","tag":"#text"},{"body":"$d$","tag":"LATEX"},{"body":", even though the\n    computations of ","tag":"#text"},{"body":"$A$","tag":"LATEX"},{"body":" and\n    ","tag":"#text"},{"body":"$d$","tag":"LATEX"},{"body":" arise from the same\n    equation.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-1","body":"1","href":"/sicpjs/3.3.5#footnote-1"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n    In this section, we sketch the design of a language that enables us to work\n    in terms of\n    \n    relations themselves.  The primitive elements of the language\n    are \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"primitive constraints","tag":"#text"}]},{"body":", which state that certain relations hold\n    between quantities.  For example,\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"adder(a, b, c)"},{"body":"\n    specifies that the quantities ","tag":"#text"},{"body":"$a$","tag":"LATEX"},{"body":",\n    ","tag":"#text"},{"body":"$b$","tag":"LATEX"},{"body":", and ","tag":"#text"},{"body":"$c$","tag":"LATEX"},{"body":" must be\n    related by the equation ","tag":"#text"},{"body":"$a+b=c$","tag":"LATEX"},{"body":",\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"multiplier(x, y, z)"},{"body":"\n    expresses the constraint ","tag":"#text"},{"body":"$xy = z$","tag":"LATEX"},{"body":", and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"constant(3.14, x)"},{"body":"\n    says that the value of ","tag":"#text"},{"body":"$x$","tag":"LATEX"},{"body":" must be 3.14.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p3","child":[{"body":"\n    Our language provides a means of combining primitive constraints in order to\n    express more complex relations.  We combine constraints by constructing \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"constraint networks","tag":"#text"}]},{"body":", in which constraints are joined by \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"connectors","tag":"#text"}]},{"body":".  A connector is an object that \"holds\" a\n    value that may participate in one or more constraints.  For example, we know\n    that the relationship between Fahrenheit and Celsius temperatures is\n    ","tag":"#text"},{"body":"\n      \\[\n      \\begin{array}{lll}\n      9C & = & 5(F - 32)\n      \\end{array}\n      \\]\n    ","tag":"LATEX"},{"body":"\n    Such a constraint can be thought of as a network consisting of primitive\n    adder, multiplier, and constant constraints\n    (figure ","tag":"#text"},{"tag":"REF","body":"3.28","href":"/sicpjs/3.3.5#fig-3.28"},{"body":").  In the figure, we see on the\n    left a multiplier box with three terminals, labeled\n    ","tag":"#text"},{"body":"$m_1$","tag":"LATEX"},{"body":", ","tag":"#text"},{"body":"$m_2$","tag":"LATEX"},{"body":", and\n    ","tag":"#text"},{"body":"$p$","tag":"LATEX"},{"body":". These connect the multiplier to the rest of\n    the network as follows:\n    The ","tag":"#text"},{"body":"$m_1$","tag":"LATEX"},{"body":" terminal is linked to a connector\n    ","tag":"#text"},{"body":"$C$","tag":"LATEX"},{"body":", which will hold the Celsius temperature.\n    The ","tag":"#text"},{"body":"$m_2$","tag":"LATEX"},{"body":" terminal is linked to a connector\n    ","tag":"#text"},{"body":"$w$","tag":"LATEX"},{"body":", which is also linked to a constant box that\n    holds 9.  The ","tag":"#text"},{"body":"$p$","tag":"LATEX"},{"body":" terminal, which the multiplier\n    box constrains to be the product of ","tag":"#text"},{"body":"$m_1$","tag":"LATEX"},{"body":" and\n    ","tag":"#text"},{"body":"$m_2$","tag":"LATEX"},{"body":", is linked to the\n    ","tag":"#text"},{"body":"$p$","tag":"LATEX"},{"body":" terminal of another multiplier box, whose\n    ","tag":"#text"},{"body":"$m_2$","tag":"LATEX"},{"body":" is connected to a constant 5 and whose\n    ","tag":"#text"},{"body":"$m_1$","tag":"LATEX"},{"body":" is connected to one of the terms in a sum.\n    ","tag":"#text"},{"tag":"FIGURE","scale":"80%","src":"img_original/ch3-Z-G-30.svg","id":"#fig-3.28","captionHref":"/sicpjs/3.3.5#fig-3.28","captionName":"Figure 3.28 ","captionBody":[{"body":"The relation ","tag":"#text"},{"body":"$9C = 5(F - 32)$","tag":"LATEX"},{"body":"\n      expressed as a constraint network.\n      ","tag":"#text"}]}]},{"tag":"TEXT","id":"#p4","child":[{"body":"\n    Computation by such a network proceeds as follows: When a connector is\n    given a value (by the user or by a constraint box to which it is\n    linked), it awakens all of its associated constraints (except for the\n    constraint that just awakened it) to inform them that it has a value.\n    Each awakened constraint box then polls its connectors to see if there\n    is enough information to determine a value for a connector.  If so,\n    the box sets that connector, which then awakens all of its associated\n    constraints, and so on.  For instance, in conversion between\n    Celsius and Fahrenheit, ","tag":"#text"},{"body":"$w$","tag":"LATEX"},{"body":",\n    ","tag":"#text"},{"body":"$x$","tag":"LATEX"},{"body":", and ","tag":"#text"},{"body":"$y$","tag":"LATEX"},{"body":" are\n    immediately set by the constant boxes to $9$, $5$, and $32$, respectively.  The\n    connectors awaken the multipliers and the adder, which determine that there\n    is not enough information to proceed.  If the user (or some other part of\n    the network) sets ","tag":"#text"},{"body":"$C$","tag":"LATEX"},{"body":" to a value (say 25), the\n    leftmost multiplier will be awakened, and it will set\n    ","tag":"#text"},{"body":"$u$","tag":"LATEX"},{"body":" to ","tag":"#text"},{"body":"$25\\cdot 9=225$","tag":"LATEX"},{"body":".\n    Then ","tag":"#text"},{"body":"$u$","tag":"LATEX"},{"body":" awakens the second multiplier, which sets\n    ","tag":"#text"},{"body":"$v$","tag":"LATEX"},{"body":" to $45$, and ","tag":"#text"},{"body":"$v$","tag":"LATEX"},{"body":"\n    awakens the adder, which sets ","tag":"#text"},{"body":"$F$","tag":"LATEX"},{"body":" to $77$.\n  ","tag":"#text"}]},{"tag":"SUBHEADING","id":"#h1","child":[{"body":"Using the constraint system","tag":"#text"}]},{"tag":"TEXT","id":"#p5","child":[{"body":"\n\tTo use the constraint system to carry out the temperature computation\n\toutlined above, we first call the constructor\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"make_connector"},{"body":"\n\tto create two connectors,\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":" and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"F"},{"body":",\n\tand then link them in an appropriate network:\n      ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":182,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQ8qAnAfQFMBDEgC1YA8SWADmQAULPoMo0ANHWIyANhQDOZAJSgA3tlA7ZpSbXlUqA4RTIsAtkvVbd90BTygzSpkQLz5Zi9dW3tByCGFjICBloAIgATGhZIgG5AoIBfUBZ5JRZHZ2FOdmifKxtQAF5y9PEhaiIAoODQ8MNjUzI2Cm9zYv8k+tA0jKzNZL69PIKiv1Ve0Z0QsIjQIxNhNo7Jm2mR+xSR3ft5pqWW4UUVLd38YnIaxyJ6BksmNgAjKgIyJgA3NnkCFmEJBoKgY7SIamGB0aiyBRBBYJEkUgoE4bC+2TYoB+fxYaEiF1whH0two90YT1e70+RCo31+-0BwLIoNJELsukOMKZLPBwiRxxUoEsAE8sfTcfikpciTcaCi2G5sQzYUQWORGHUOdDaCq1WRGHzUYrxZLsLsZQZQABzUJ0nGMoiq9UMTVzbWgXXOvlK+IEi23LKfH0Op36hgyVUAdzt-xkpIeljY4NdoE5OpooYNkUDMd9wijubjZMeSbUUquxLlDxtQfFIb1jBk81BzpTaY9GYbDD51dC+OEzY4Yb910tnpE48boALsPhrLb7sn3ci4-7M+5CIJFdltETAGsWEwl8IU-JQmKcWU6L8sjMdGeyHcE6Wr3gbyw70tz7PmQilFePC8T9-TlHMRVzfMWEjbEZEDCwXUheonBcABCI0IMsFh-EQ2YfQAqDsU-Pp43JF9SlAOCWAYIj6nbB5WA4bgxH4IRhEo8NtlmLjRhIx5njeD5C047iRPsH8eTIGwaJ0AZMmyZDhDwlCKijbEUz6KiGANM4RB9CMCN+VQZBXGhf2iCgd1NPpZKGdlZnbSIKCtGkQmiRJhP6PYRhA2he0+cDg0HVscIcBSgrDMoKl4xNkxC4jixix9yLfOTpIcOjGAYrheBYkRwsbDzRJE6L+KpdxaT0wqiq48S-y2az0jkuLaPdRznMYFg3LS-ZdB6nQfI7R09Ug6NavnZqdAU5R3E8bxMMsF4qJGo8N1ZGQxvBTZ1PqDbJKvAR2m7dc4V-NbBrnTb6vqGzsg0PrQtydDg0w7C7J4hLSsE4NjoussPJuzR7qhBYoliVV3J2bzR1uTCBxYABHf5zgmnIXBCRGWEFcpyMiJ6TW2hoQafUjwVAZTkvfbrGqGMKEaRpKKkiH18RR4Gjh9KnBnk3J0fpyKcZzZmCfS90wOFXNOaa2mMaxxm-JZt6+gyhgayYALxUlmmebpzGGZx1dhbZrkhvITXbqqnRNINXndeM4g9xpSNaBMKi2EtABad3BszBgrOuryjd3D8zUJaG5UsTxKAERQlssABGGRLAAJhkAQtOiAhyBTAa06ofglDcAtg2FhS8gVDC4-UAAyKvrVtZ7K-50AAAZVEKgAfduXDx+1k+r2vVeepP1GxlvXotij67rXOM-IGRm8TrCzdRsvjV7xua-lNeGT7w3dEF6f08zsgZEHut4-UAAqOva174fF6u1Jqe57vy+DGfj-7reK-H7iD7v0+U97QfyzqAMAZ915GSFEvf6z8V49wZCAiEm8EEAl3qzfeQCd4JxvhBJB6hwFYLQffaBj8HAAzugHXQOctL5zcH5CCwsGHvyPnPUhaVmHnxwS9DhjAIE7xTuwjyuc6HuCgowz890BqwxtsjRWuhpZ81HvyVE6JQCYh9HiPeOgRGY0LuI4uy9FG6ybvyIwgoRQXn+FojBOjaF6KYJw+0ZCdhwPkUEK23ZZEn1AJEe2jtaDeNAJ7IUkcKDRwoFRP2qQqE6HHMIeOD9PzxOTkkkY8SkFpMDtA8s25LRsGiNEJabAcFsEEUoAglhs5h1oLoguYjozFxRgpVBwgSlf1aWU3+XF-4MgqZYQBt8GTtNAAAalwcGLpWTrpwJaW-OsIyUHzPtP07psxekAjKYMiCqzgkTIWZXaZT8ubwOWcM4eoAlnbwBKs7Rk8hmbJwfwm5lT1Be2eW0khPDYEnMoZDewNC84OKcQyJhfCiFsUqUchwILHnQoBeCh5nz4W6DqfoxpdYyFSJqdAuGMs2QeWMbLHGyJVEYisRKO5aKGkSJ+VLbW+LTHInMY+SxmiFYT2pbCk8y93EOE8Xi+mdsiAOyoE7VMOtBQhIKUU32LjeqxO9sNEp0L4lbKEWJTs5BIUDI1VqImmFckDR-KWRS4p1pauHCFaRAJvHCwFd44VorxVBJCSa8E0TPKapNhOS1U5vn2A2fWZ0Mg9J6rdAa4O0ocX8EyBQAg9C2CcBCEQfI5gVpEHRAweCgIZB4BTD+UABArz7kPMeMhhavglrYAeDNPseXpKZKASM1ba3luSU2ngray1+u7BWptopyKlrrV2Bt9gI7yCjjHbsJAZCRhkAQMhE6p2RO7F8GQPAF1kJlUtddoBhR5v7SdU1ABOOdR6VCmswBui9bReQoEEcKMhDkqB7ncpcQt0Bu0jq9FsQtAAxb97bsCxqUPGxNyaWCppYOm2EWac3QBkP+6YQA","body":"const C = make_connector();\nconst F = make_connector();\ncelsius_fahrenheit_converter(C, F); ","output":"\"ok\""},{"body":"\n    The\n    function\n    that creates the network is defined as follows:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":2,"eval":true,"prependLength":167,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQ8qAnAfQFMBDEgC1YA8SWADmQAULPoMo0ANHWIyANhQDOZAJSgA3tlA7ZpSbXlUqA4RTIsAtkvVbd90BTygzSpkQLz5Zi9dW3tByCGFjICBloAIgATGhZIgG5AoIBfUBZ5JRZHZ2FOdmifKxtQAF5y9PEhaiIAoODQ8MNjUzI2Cm9zYv8k+tA0jKzNZL69PIKiv1Ve0Z0QsIjQIxNhNo7Jm2mR+xSR3ft5pqWW4UUVLd38YnIaxyJ6BksmNgAjKgIyJgA3NnkCFmEJBoKgY7SIamGB0aiyBRBBYJEkUgoE4bC+2TYoB+fxYaEiF1whH0two90YT1e70+RCo31+-0BwLIoNJELsukOMKZLPBwiRxxUoEsAE8sfTcfikpciTcaCi2G5sQzYUQWORGHUOdDaCq1WRGHzUYrxZLsLsZQZQABzUJ0nGMoiq9UMTVzbWgXXOvlK+IEi23LKfH0Op36hgyVUAdzt-xkpIeljY4NdoE5OpooYNkUDMd9wijubjZMeSbUUquxLlDxtQfFIb1jBk81BzpTaY9GYbDD51dC+OEzY4Yb910tnpE48boALsPhrLb7sn3ci4-7M+5CIJFdltETAGsWEwl8IU-JQmKcWU6L8sjMdGeyHcE6Wr3gbyw70tz7PmQilFePC8T9-TlHMRVzfMWEjbEZEDCwXUheonBcABCI0IMsFh-EQ2YfQAqDsU-Pp43JF9SlAOCWAYIj6nbB5WA4bgxH4IRhEo8NtlmLjRhIx5njeD5C047iRPsH8eTIGwaJ0AZMmyZDhDwlCKijbEUz6KiGANM4RB9CMCN+VQZBXGhf2iCgd1NPpZKGdlZnbSIKCtGkQmiRJhP6PYRhA2he0+cDg0HVscIcBSgrDMoKl4xNkxC4jixix9yLfOTpIcOjGAYrheBYkRwsbDzRJE6L+KpdxaT0wqiq48S-y2az0jkuLaPdRznMYFg3LS-ZdB6nQfI7R09Ug6NavnZqdAU5R3E8bxMMsF4qJGo8N1ZGQxvBTZ1PqDbJKvAR2m7dc4V-NbBrnTb6vqGzsg0PrQtydDg0w7C7J4hLSsE4NjoussPJuzR7qhBYoliVV3J2bzR1uTCBxYABHf5zgmnIXBCRGWEFcpyMiJ6TW2hoQafUjwVAZTkvfbrGqGMKEaRpKKkiH18RR4Gjh9KnBnk3J0fpyKcZzZmCfS90wOFXNOaa2mMaxxm-JZt6+gyhgayYALxUlmmebpzGGZx1dhbZrkhvITXbqqnRNINXndeM4g9xpSNaBMKi2EtABad3BszBgrOuryjd3D8zUJaG5UsTxKAERQlssABGGRLAAJhkAQtOiAhyBTAa06ofglDcAtg2FhS8gVDC4-UAAyKvrVtZ7K-50AAAZVEKgAfduXDx+1k+r2vVeepP1GxlvXotij67rXOM-IGRm8TrCzdRsvjV7xua-lNeGT7w3dEF6f08zsgZEHut4-UAAqOva174fF6u1Jqe57vy+DGfj-7reK-H7iD7v0+U97QfyzqAMAZ915GSFEvf6z8V49wZCAiEm8EEAl3qzfeQCd4JxvhBJB6hwFYLQffaBj8HAAzugHXQOctL5zcH5CCwsGHvyPnPUhaVmHnxwS9DhjAIE7xTuwjyuc6HuCgowz890BqwxtsjRWuhpZ81HvyVE6JQCYh9HiPeOgRGY0LuI4uy9FG6ybvyIwgoRQXn+FojBOjaF6KYJw+0ZCdhwPkUEK23ZZEn1AJEe2jtaDeNAJ7IUkcKDRwoFRP2qQqE6HHMIeOD9PzxOTkkkY8SkFpMDtA8s25LRsGiNEJabAcFsEEUoAglhs5h1oLoguYjozFxRgpVBwgSlf1aWU3+XF-4MgqZYQBt8GTtNAAAalwcGLpWTrpwJaW-OsIyUHzPtP07psxekAjKYMiCqzgkTIWZXaZT8ubwOWcM4eoAlnbwBKs7Rk8hmbJwfwm5lT1Be2eW0khPDYEnMoZDewNC84OKcQyJhfCiFsUqUchwILHnQoBeCh5nz4W6DqfoxpdYyFSJqdAuGMs2QeWMbLHGyJVEYisRKO5aKGkSJ+VLbW+LTHInMY+SxmiFYT2pbCk8y93EOE8Xi+mdsiAOyoE7VMOtBQhIKUU32LjeqxO9sNEp0L4lbKEWJTs5BIUDI1VqImmFckDR-KWRS4p1pauHCFaRAJvHCwFd44VorxVBJCSa8E0TPKapNhOS1U5vn2A2fWZ0Mg9J6rdAa4O0ocX8EyBQAg9C2CcBCEQfI5gVpEHRAweCgIZB4BTD+UABArz7kPMeMhhavglrYAeDNPseXpKZKASM1ba3luSU2ngray1+u7BWptopyKlrrV2Bt9gI7yCjjHbsJAZCRhkAQMhE6p2RO7F8GQPAF1kJlUtddoBhR5v7SdU1ABOOdR6VCmswBui9bReQoEEcKMhDkqB7ncpcQt0Bu0jq9FsQtAAxb97bsCxqUPGxNyaWCppYOm2EWac3QBkP+6YQA","body":"function celsius_fahrenheit_converter(c, f) {\n    const u = make_connector();\n    const v = make_connector();\n    const w = make_connector();\n    const x = make_connector();\n    const y = make_connector();\n    multiplier(c, w, u);\n    multiplier(v, x, u);\n    adder(v, y, f);\n    constant(9, w);\n    constant(5, x);\n    constant(32, y);\n    return \"ok\";\n} "},{"body":"\n    This\n    function\n    creates the internal connectors ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"u"},{"body":",\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"v"},{"body":", ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"w"},{"body":",\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"x"},{"body":", and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"y"},{"body":", and\n    links them as shown in figure ","tag":"#text"},{"tag":"REF","body":"3.28","href":"/sicpjs/3.3.5#fig-3.28"},{"body":" using the\n    primitive constraint constructors ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"adder"},{"body":",\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"multiplier"},{"body":", and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"constant"},{"body":".  Just as with the digital-circuit\n    simulator of section ","tag":"#text"},{"tag":"REF","body":"3.3.4","href":"/sicpjs/3.3.4"},{"body":", expressing\n    these combinations of primitive elements in terms of\n    functions\n    automatically provides our language with a means of abstraction for compound\n    objects.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n    To watch the network in action, we can place probes on the connectors\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":" and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"F"},{"body":", using a\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"probe"},{"body":"function\n    similar to the one we used to monitor wires in\n    section ","tag":"#text"},{"tag":"REF","body":"3.3.4","href":"/sicpjs/3.3.4"},{"body":". Placing a probe on a\n    connector will cause a message to be printed whenever the connector is\n    given a value:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":207,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQALAQwGcB9ANwYBsCBTAChI0iPclQBOASlABvbKHmgxPMgTG1BRYaLF8ARI1YduPXRIDc2AL75i5arQDmy9l14ChIsuKmyFi5arqHtp6RrymFtaEpJQ0oEzOYfwaWl5iADSgwgDuLsaZFER44gC2DERkPnIKSipqoCme4noJZHnhEnw57TwFRaXllZE2MfagxWJObUnumk0Z-mRiDNpVfrWBDcFpehNTpny1y6vD0XZxjeSzqeKZ3RpMSwyFlTLV8hv1lzu63wf3NEeyxe5isuDOsVoAAcxFQAEb8IgMEq9LZzVZvPwQsYwl4sGHw-hJNZ+BQAEwoTChnAYAE89LBYQiAFygXSgADUWWRPE5bNAAF5+VygYUHBQ8PTiaC-NYsbZIaACSQeExWN0ZiTSUqxHiCQi+FMetd5hIZQo5QpsXFlarWHtEq5+FrSbiKvimfxdAB+CLvUCW+TW2gow48ACOvEeLvWAXqSkjqrIgoFQt0kHoDDYvIYoCSaF0-u1pO9OqoKrVLA1Tr4EiLxYUrITUeTqbTGc4VEeoBKtLzToL9YboFLtsrDumNbrw+1rJ4YlhOmbScyumIAGsiFRsrRl92ALT7ssIv2y-3fE3aTIo80fOMhnjDEbnWgTFg8FZ0d8ADxVULIfA8L+PD-vYmTRJknCUq8vhWgqYydlQUJ8BQZA8CUTAxgoEqgCh6oEJwnAoWhGFmpiM6LJsuhkjQJgWA2ligDwnAJKAOF8HQH5ksR6GYSmQpAX+kJYdqny0IhyFkM8RGobxZr0cWjHMaxsEztEHFcTxpG3sOYmgBJfBSRQMkkZhOlnhZNT3vpVBIXwUHRk+wZsf0YglCwDBwlQBCTsYsxAs8FQunpDxPC8egZow2agLm+Z+tYz6KoUEzuZ53ltFuxqhcCQXkXedRBEQAXhemNndr2-bGAWoIJc5ZTrjwLDfM0LqcMolW8IK4xcAkCnyG1ybJQMFRdXgPWPv6A1osVFRMF1RAEZwfXjPBcStCwvbGjkRiZK0aGSHlpLsQAhAYxo3iJpJJPNPDZEYy0NkNbmDF1e3zg9xZ6W+H4kF+gkgQBb0ZEOFGg0drmpV5Pk9OkINg-D2WBWQmEffISksby7HXcdqZZLdRiXX486LvZ0F8Ekdz41wEirhoTwUi+p6KUxGOHQ2em6BQDhbkoZK6KjAb+oGK2jHEE4bbSxpHCsaSXex0vaPxLkpYMhPYRDL1CmNGMC7GBXjOI76fj+Qlhk8V5w-DoNPZD6VVlQMOW1bM6Iy8KMg+jKlO5R9Sc9z4g8HzAvC8LzkXgCRVhblqlHXguGUlWi18CiJQIjoEczWQmSu7NZpq-IOfI11ULPOnt1NYCUdZ9NVfuwxLMqcLfjsWdMwXWzxY2x5UO+W4GdV+ZFoN7y0hN1Z+vUbR-NC-6dX8HuMEg-LEYtkr+jMD0pgd6J1k2y9ONa+NwfD2xcdhom3ZtmySRbzH7PWUkx-KZjZ8L2v603-nPu0Otm2Px7J9l4X1bLjXQE5b7ey+uII0f8nRP1ZkA1eV9fjbAgaDEK2x4Fe1BsTZoC9Vwbi3DuUASF5wMEVIeNENwxBM21CHf0ekUROVWiGAilBqQUHnMnAAjNeAATJkAkZICDkBdM5Mc6py6am3qfXCHEN5t24VIAAZMo0ARpFFSCvgABmnA2AAPvo3CrcawlD4SotRGjTHmKVror+H8axCJEdXbR14eCDzRoAs+Ji-IlCUaAVRmZDDWLInfYsDi-JOPIJkKxvj-EACp1GOl8eYtxHiAxeOMQoxxsJhGiICWonxbg-GhO9hE4pAikm934FE14YBYnFKUWkrBL8snBMibk5xFignnXMfY5JjSYkDJqZ0-J9ThnJ1ST2dxLSZD0PlKLaEsIKz2mgRMy64sZi1OaSDTZpjeHTPSXslJOyGwSKrFIqcy1Q4sOmefFsctX4ryTGvSKWYcwdR4NVGRfhznVj8ukz2rT7kvOQR2LsyYKpxS-uc45bhAUnzCdqXBS5nmPAIUQTc25dxouTJQkobCKAcPnLQ0k8yFAXj8acil2xJnUoLrS7ZhzlqMImrVW5DAyRki4QwA5DBKlMAICUMRty-mXIBTIlu2S-K8u6UU-g-LSmg3KfwQVJQhnVL4LKvkDSFVTJvLMqV7S3DasCfKvgaqlUURVVqypuqLVCqkEee1sr6VksyfI41eq5XSrcJa-pmreUauNJa0AzqJmKrdbKRF5KgyiuWXaFgcLnQyOTQ69VzLdlrMDQcg1WbJgRsqXms5CbKz-Phdc2etzQwL0ebhN+YLMzRVigONBFExW5E1Iap5wDXllUhX2aFPyFCwuzcaBFz9h3yBRSC9FbJCHYv8L2yhnLuU0MBTPPwF4g2Zq3bS-lbqLxqrday5hiya6DHJk6bO2xvCHTnrOxeDYZ34PnZiohOLl1HlCoMUlwsLzNQWMWhQNrAOZApru8emwmFgkSmMFULEKAEHtAwOgSgiCcVQhXIg2YxD7QEOBF0oVQAEC6vVRqgHazLWI2wMjDAGrYeoVR88ldQDZDowxyjOliPfg4xR29OhuOsb7EKcjjH5jMb8ASzg7CoJcJIJkbImQCA6Wk7JzhOg2CZG-MpnSq6uFadALSQj1HK6XoAJyKaE5HS9mBtPWceJelAlTaQ6Q5lQdc08ErEegHx8TIRQTEYAGJ+a4xYBDTAkMobQzwDDPAsMaFw-h6AmQgugmwPqL00BlJRdACRKEuhMjQFBJlvQQXUPocw8mfLhXQBpbMEAA","body":"probe(\"Celsius temp\", C);\nprobe(\"Fahrenheit temp\", F); "},{"body":"\n    Next we set the value of ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":" to 25.  (The third\n    argument to\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"set_value"},{"body":"\n    tells ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":" that this directive comes from the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"user"},{"body":".)\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":210,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQALAQwGcB9ANwYBsCBTAChI0iPclQBOASlABvbKHmgxPMgTG1BRYaLF8ARI1YduPXRIDc2AL75i5arQDmy9l14ChIsuKmyFi5arqHtp6RrymFtaEpJQ0oEzOYfwaWl5iADSgwgDuLsaZFER44gC2DERkPnIKSipqoCme4noJZHnhEnw57TwFRaXllZE2MfagxWJObUnumk0Z-mRiDNpVfrWBDcFpehNTpny1y6vD0XZxjeSzqeKZ3RpMSwyFlTLV8hv1lzu63wf3NEeyxe5isuDOsVoAAcxFQAEb8IgMEq9LZzVZvPwQsYwl4sGHw-hJNZ+BQAEwoTChnAYAE89LBYQiAFygXSgADUWWRPE5bNAAF5+VygYUHBQ8PTiaC-NYsbZIaACSQeExWN0ZiTSUqxHiCQi+FMetd5hIZQo5QpsXFlarWHtEq5+FrSbiKvimfxdAB+CLvUCW+TW2gow48ACOvEeLvWAXqSkjqrIgoFQt0kHoDDYvIYoCSaF0-u1pO9OqoKrVLA1Tr4EiLxYUrITUeTqbTGc4VEeoBKtLzToL9YboFLtsrDumNbrw+1rJ4YlhOmbScyumIAGsiFRsrRl92ALT7ssIv2y-3fE3aTIo80fOMhnjDEbnWgTFg8FZ0d8ADxVULIfA8L+PD-vYmTRJknCUq8vhWgqYydlQUJ8BQZA8CUTAxgoEqgCh6oEJwnAoWhGFmpiM6LJsuhkjQJgWA2ligDwnAJKAOF8HQH5ksR6GYSmQpAX+kJYdqny0IhyFkM8RGobxZr0cWjHMaxsEztEHFcTxpG3sOYmgBJfBSRQMkkZhOlnhZNT3vpVBIXwUHRk+wZsf0YglCwDBwlQBCTsYsxAs8FQunpDxPC8egZow2agLm+Z+tYz6KoUEzuZ53ltFuxqhcCQXkXedRBEQAXhemNndr2-bGAWoIJc5ZTrjwLDfM0LqcMolW8IK4xcAkCnyG1ybJQMFRdXgPWPv6A1osVFRMF1RAEZwfXjPBcStCwvbGjkRiZK0aGSHlpLsQAhAYxo3iJpJJPNPDZEYy0NkNbmDF1e3zg9xZ6W+H4kF+gkgQBb0ZEOFGg0drmpV5Pk9OkINg-D2WBWQmEffISksby7HXcdqZZLdRiXX486LvZ0F8Ekdz41wEirhoTwUi+p6KUxGOHQ2em6BQDhbkoZK6KjAb+oGK2jHEE4bbSxpHCsaSXex0vaPxLkpYMhPYRDL1CmNGMC7GBXjOI76fj+Qlhk8V5w-DoNPZD6VVlQMOW1bM6Iy8KMg+jKlO5R9Sc9z4g8HzAvC8LzkXgCRVhblqlHXguGUlWi18CiJQIjoEczWQmSu7NZpq-IOfI11ULPOnt1NYCUdZ9NVfuwxLMqcLfjsWdMwXWzxY2x5UO+W4GdV+ZFoN7y0hN1Z+vUbR-NC-6dX8HuMEg-LEYtkr+jMD0pgd6J1k2y9ONa+NwfD2xcdhom3ZtmySRbzH7PWUkx-KZjZ8L2v603-nPu0Otm2Px7J9l4X1bLjXQE5b7ey+uII0f8nRP1ZkA1eV9fjbAgaDEK2x4Fe1BsTZoC9Vwbi3DuUASF5wMEVIeNENwxBM21CHf0ekUROVWiGAilBqQUHnMnAAjNeAATJkAkZICDkBdM5Mc6py6am3qfXCHEN5t24VIAAZMo0ARpFFSCvgABmnA2AAPvo3CrcawlD4SotRGjTHmKVror+H8axCJEdXbR14eCDzRoAs+Ji-IlCUaAVRmZDDWLInfYsDi-JOPIJkKxvj-EACp1GOl8eYtxHiAxeOMQoxxsJhGiICWonxbg-GhO9hE4pAikm934FE14YBYnFKUWkrBL8snBMibk5xFignnXMfY5JjSYkDJqZ0-J9ThnJ1ST2dxLSZD0PlKLaEsIKz2mgRMy64sZi1OaSDTZpjeHTPSXslJOyGwSKrFIqcy1Q4sOmefFsctX4ryTGvSKWYcwdR4NVGRfhznVj8ukz2rT7kvOQR2LsyYKpxS-uc45bhAUnzCdqXBS5nmPAIUQTc25dxouTJQkobCKAcPnLQ0k8yFAXj8acil2xJnUoLrS7ZhzlqMImrVW5DAyRki4QwA5DBKlMAICUMRty-mXIBTIlu2S-K8u6UU-g-LSmg3KfwQVJQhnVL4LKvkDSFVTJvLMqV7S3DasCfKvgaqlUURVVqypuqLVCqkEee1sr6VksyfI41eq5XSrcJa-pmreUauNJa0AzqJmKrdbKRF5KgyiuWXaFgcLnQyOTQ69VzLdlrMDQcg1WbJgRsqXms5CbKz-Phdc2etzQwL0ebhN+YLMzRVigONBFExW5E1Iap5wDXllUhX2aFPyFCwuzcaBFz9h3yBRSC9FbJCHYv8L2yhnLuU0MBTPPwF4g2Zq3bS-lbqLxqrday5hiya6DHJk6bO2xvCHTnrOxeDYZ34PnZiohOLl1HlCoMUlwsLzNQWMWhQNrAOZApru8emwmFgkSmMFULEKAEHtAwOgSgiCcVQhXIg2YxD7QEOBF0oVQAEC6vVRqgHazLWI2wMjDAGrYeoVR88ldQDZDowxyjOliPfg4xR29OhuOsb7EKcjjH5jMb8ASzg7CoJcJIJkbImQCA6Wk7JzhOg2CZG-MpnSq6uFadALSQj1HK6XoAJyKaE5HS9mBtPWceJelAlTaQ6Q5lQdc08ErEegHx8TIRQTEYAGJ+a4xYBDTAkMobQzwDDPAsMaFw-h6AmQgugmwPqL00BlJRdACRKEuhMjQFBJlvQQXUPocw8mfLhXQBpYsNgG1KXQB8Ls-OhI66zBAA","body":"set_value(C, 25, \"user\"); ","output":"\"Probe: Celsius temp = 25\"\n\"Probe: Fahrenheit temp = 77\"\n\"done\""},{"body":"\n    The probe on ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":" awakens and reports the value.\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":" also\n    propagates its value through the network as described above.  This\n    sets ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"F"},{"body":" to 77, which is reported by the probe\n    on ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"F"},{"body":".\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p7","child":[{"body":"\n    Now we can try to set ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"F"},{"body":" to a new value, say 212:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":212,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQALAQwGcB9ANwYBsCBTAChI0iPclQBOASlABvbKHmgxPMgTG1BRYaLF8ARI1YduPXRIDc2AL75i5arQDmy9l14ChIsuKmyFi5arqHtp6RrymFtaEpJQ0oEzOYfwaWl5iADSgwgDuLsaZFER44gC2DERkPnIKSipqoCme4noJZHnhEnw57TwFRaXllZE2MfagxWJObUnumk0Z-mRiDNpVfrWBDcFpehNTpny1y6vD0XZxjeSzqeKZ3RpMSwyFlTLV8hv1lzu63wf3NEeyxe5isuDOsVoAAcxFQAEb8IgMEq9LZzVZvPwQsYwl4sGHw-hJNZ+BQAEwoTChnAYAE89LBYQiAFygXSgADUWWRPE5bNAAF5+VygYUHBQ8PTiaC-NYsbZIaACSQeExWN0ZiTSUqxHiCQi+FMetd5hIZQo5QpsXFlarWHtEq5+FrSbiKvimfxdAB+CLvUCW+TW2gow48ACOvEeLvWAXqSkjqrIgoFQt0kHoDDYvIYoCSaF0-u1pO9OqoKrVLA1Tr4EiLxYUrITUeTqbTGc4VEeoBKtLzToL9YboFLtsrDumNbrw+1rJ4YlhOmbScyumIAGsiFRsrRl92ALT7ssIv2y-3fE3aTIo80fOMhnjDEbnWgTFg8FZ0d8ADxVULIfA8L+PD-vYmTRJknCUq8vhWgqYydlQUJ8BQZA8CUTAxgoEqgCh6oEJwnAoWhGFmpiM6LJsuhkjQJgWA2ligDwnAJKAOF8HQH5ksR6GYSmQpAX+kJYdqny0IhyFkM8RGobxZr0cWjHMaxsEztEHFcTxpG3sOYmgBJfBSRQMkkZhOlnhZNT3vpVBIXwUHRk+wZsf0YglCwDBwlQBCTsYsxAs8FQunpDxPC8egZow2agLm+Z+tYz6KoUEzuZ53ltFuxqhcCQXkXedRBEQAXhemNndr2-bGAWoIJc5ZTrjwLDfM0LqcMolW8IK4xcAkCnyG1ybJQMFRdXgPWPv6A1osVFRMF1RAEZwfXjPBcStCwvbGjkRiZK0aGSHlpLsQAhAYxo3iJpJJPNPDZEYy0NkNbmDF1e3zg9xZ6W+H4kF+gkgQBb0ZEOFGg0drmpV5Pk9OkINg-D2WBWQmEffISksby7HXcdqZZLdRiXX486LvZ0F8Ekdz41wEirhoTwUi+p6KUxGOHQ2em6BQDhbkoZK6KjAb+oGK2jHEE4bbSxpHCsaSXex0vaPxLkpYMhPYRDL1CmNGMC7GBXjOI76fj+Qlhk8V5w-DoNPZD6VVlQMOW1bM6Iy8KMg+jKlO5R9Sc9z4g8HzAvC8LzkXgCRVhblqlHXguGUlWi18CiJQIjoEczWQmSu7NZpq-IOfI11ULPOnt1NYCUdZ9NVfuwxLMqcLfjsWdMwXWzxY2x5UO+W4GdV+ZFoN7y0hN1Z+vUbR-NC-6dX8HuMEg-LEYtkr+jMD0pgd6J1k2y9ONa+NwfD2xcdhom3ZtmySRbzH7PWUkx-KZjZ8L2v603-nPu0Otm2Px7J9l4X1bLjXQE5b7ey+uII0f8nRP1ZkA1eV9fjbAgaDEK2x4Fe1BsTZoC9Vwbi3DuUASF5wMEVIeNENwxBM21CHf0ekUROVWiGAilBqQUHnMnAAjNeAATJkAkZICDkBdM5Mc6py6am3qfXCHEN5t24VIAAZMo0ARpFFSCvgABmnA2AAPvo3CrcawlD4SotRGjTHmKVror+H8axCJEdXbR14eCDzRoAs+Ji-IlCUaAVRmZDDWLInfYsDi-JOPIJkKxvj-EACp1GOl8eYtxHiAxeOMQoxxsJhGiICWonxbg-GhO9hE4pAikm934FE14YBYnFKUWkrBL8snBMibk5xFignnXMfY5JjSYkDJqZ0-J9ThnJ1ST2dxLSZD0PlKLaEsIKz2mgRMy64sZi1OaSDTZpjeHTPSXslJOyGwSKrFIqcy1Q4sOmefFsctX4ryTGvSKWYcwdR4NVGRfhznVj8ukz2rT7kvOQR2LsyYKpxS-uc45bhAUnzCdqXBS5nmPAIUQTc25dxouTJQkobCKAcPnLQ0k8yFAXj8acil2xJnUoLrS7ZhzlqMImrVW5DAyRki4QwA5DBKlMAICUMRty-mXIBTIlu2S-K8u6UU-g-LSmg3KfwQVJQhnVL4LKvkDSFVTJvLMqV7S3DasCfKvgaqlUURVVqypuqLVCqkEee1sr6VksyfI41eq5XSrcJa-pmreUauNJa0AzqJmKrdbKRF5KgyiuWXaFgcLnQyOTQ69VzLdlrMDQcg1WbJgRsqXms5CbKz-Phdc2etzQwL0ebhN+YLMzRVigONBFExW5E1Iap5wDXllUhX2aFPyFCwuzcaBFz9h3yBRSC9FbJCHYv8L2yhnLuU0MBTPPwF4g2Zq3bS-lbqLxqrday5hiya6DHJk6bO2xvCHTnrOxeDYZ34PnZiohOLl1HlCoMUlwsLzNQWMWhQNrAOZApru8emwmFgkSmMFULEKAEHtAwOgSgiCcVQhXIg2YxD7QEOBF0oVQAEC6vVRqgHazLWI2wMjDAGrYeoVR88ldQDZDowxyjOliPfg4xR29OhuOsb7EKcjjH5jMb8ASzg7CoJcJIJkbImQCA6Wk7JzhOg2CZG-MpnSq6uFadALSQj1HK6XoAJyKaE5HS9mBtPWceJelAlTaQ6Q5lQdc08ErEegHx8TIRQTEYAGJ+a4xYBDTAkMobQzwDDPAsMaFw-h6AmQgugmwPqL00BlJRdACRKEuhMjQFBJlvQQXUPocw8mfLhXQBpYsNgG1KXQB8Ls-OhI66Gs2qC5kPh3DKlrg6xEIAA","body":"set_value(F, 212, \"user\"); ","output":"\"Error! Contradiction: (77, 212)\""},{"body":"\n    The connector complains that it has sensed a contradiction: Its value\n    is 77, and someone is trying to set it to 212.  If we really want to\n    reuse the network with new values, we can tell\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":" to forget its old value:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":6,"eval":true,"prependLength":212,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQALAQwGcB9ANwYBsCBTAChI0iPclQBOASlABvbKHmgxPMgTG1BRYaLF8ARI1YduPXRIDc2AL75i5arQDmy9l14ChIsuKmyFi5arqHtp6RrymFtaEpJQ0oEzOYfwaWl5iADSgwgDuLsaZFER44gC2DERkPnIKSipqoCme4noJZHnhEnw57TwFRaXllZE2MfagxWJObUnumk0Z-mRiDNpVfrWBDcFpehNTpny1y6vD0XZxjeSzqeKZ3RpMSwyFlTLV8hv1lzu63wf3NEeyxe5isuDOsVoAAcxFQAEb8IgMEq9LZzVZvPwQsYwl4sGHw-hJNZ+BQAEwoTChnAYAE89LBYQiAFygXSgADUWWRPE5bNAAF5+VygYUHBQ8PTiaC-NYsbZIaACSQeExWN0ZiTSUqxHiCQi+FMetd5hIZQo5QpsXFlarWHtEq5+FrSbiKvimfxdAB+CLvUCW+TW2gow48ACOvEeLvWAXqSkjqrIgoFQt0kHoDDYvIYoCSaF0-u1pO9OqoKrVLA1Tr4EiLxYUrITUeTqbTGc4VEeoBKtLzToL9YboFLtsrDumNbrw+1rJ4YlhOmbScyumIAGsiFRsrRl92ALT7ssIv2y-3fE3aTIo80fOMhnjDEbnWgTFg8FZ0d8ADxVULIfA8L+PD-vYmTRJknCUq8vhWgqYydlQUJ8BQZA8CUTAxgoEqgCh6oEJwnAoWhGFmpiM6LJsuhkjQJgWA2ligDwnAJKAOF8HQH5ksR6GYSmQpAX+kJYdqny0IhyFkM8RGobxZr0cWjHMaxsEztEHFcTxpG3sOYmgBJfBSRQMkkZhOlnhZNT3vpVBIXwUHRk+wZsf0YglCwDBwlQBCTsYsxAs8FQunpDxPC8egZow2agLm+Z+tYz6KoUEzuZ53ltFuxqhcCQXkXedRBEQAXhemNndr2-bGAWoIJc5ZTrjwLDfM0LqcMolW8IK4xcAkCnyG1ybJQMFRdXgPWPv6A1osVFRMF1RAEZwfXjPBcStCwvbGjkRiZK0aGSHlpLsQAhAYxo3iJpJJPNPDZEYy0NkNbmDF1e3zg9xZ6W+H4kF+gkgQBb0ZEOFGg0drmpV5Pk9OkINg-D2WBWQmEffISksby7HXcdqZZLdRiXX486LvZ0F8Ekdz41wEirhoTwUi+p6KUxGOHQ2em6BQDhbkoZK6KjAb+oGK2jHEE4bbSxpHCsaSXex0vaPxLkpYMhPYRDL1CmNGMC7GBXjOI76fj+Qlhk8V5w-DoNPZD6VVlQMOW1bM6Iy8KMg+jKlO5R9Sc9z4g8HzAvC8LzkXgCRVhblqlHXguGUlWi18CiJQIjoEczWQmSu7NZpq-IOfI11ULPOnt1NYCUdZ9NVfuwxLMqcLfjsWdMwXWzxY2x5UO+W4GdV+ZFoN7y0hN1Z+vUbR-NC-6dX8HuMEg-LEYtkr+jMD0pgd6J1k2y9ONa+NwfD2xcdhom3ZtmySRbzH7PWUkx-KZjZ8L2v603-nPu0Otm2Px7J9l4X1bLjXQE5b7ey+uII0f8nRP1ZkA1eV9fjbAgaDEK2x4Fe1BsTZoC9Vwbi3DuUASF5wMEVIeNENwxBM21CHf0ekUROVWiGAilBqQUHnMnAAjNeAATJkAkZICDkBdM5Mc6py6am3qfXCHEN5t24VIAAZMo0ARpFFSCvgABmnA2AAPvo3CrcawlD4SotRGjTHmKVror+H8axCJEdXbR14eCDzRoAs+Ji-IlCUaAVRmZDDWLInfYsDi-JOPIJkKxvj-EACp1GOl8eYtxHiAxeOMQoxxsJhGiICWonxbg-GhO9hE4pAikm934FE14YBYnFKUWkrBL8snBMibk5xFignnXMfY5JjSYkDJqZ0-J9ThnJ1ST2dxLSZD0PlKLaEsIKz2mgRMy64sZi1OaSDTZpjeHTPSXslJOyGwSKrFIqcy1Q4sOmefFsctX4ryTGvSKWYcwdR4NVGRfhznVj8ukz2rT7kvOQR2LsyYKpxS-uc45bhAUnzCdqXBS5nmPAIUQTc25dxouTJQkobCKAcPnLQ0k8yFAXj8acil2xJnUoLrS7ZhzlqMImrVW5DAyRki4QwA5DBKlMAICUMRty-mXIBTIlu2S-K8u6UU-g-LSmg3KfwQVJQhnVL4LKvkDSFVTJvLMqV7S3DasCfKvgaqlUURVVqypuqLVCqkEee1sr6VksyfI41eq5XSrcJa-pmreUauNJa0AzqJmKrdbKRF5KgyiuWXaFgcLnQyOTQ69VzLdlrMDQcg1WbJgRsqXms5CbKz-Phdc2etzQwL0ebhN+YLMzRVigONBFExW5E1Iap5wDXllUhX2aFPyFCwuzcaBFz9h3yBRSC9FbJCHYv8L2yhnLuU0MBTPPwF4g2Zq3bS-lbqLxqrday5hiya6DHJk6bO2xvCHTnrOxeDYZ34PnZiohOLl1HlCoMUlwsLzNQWMWhQNrAOZApru8emwmFgkSmMFULEKAEHtAwOgSgiCcVQhXIg2YxD7QEOBF0oVQAEC6vVRqgHazLWI2wMjDAGrYeoVR88ldQDZDowxyjOliPfg4xR29OhuOsb7EKcjjH5jMb8ASzg7CoJcJIJkbImQCA6Wk7JzhOg2CZG-MpnSq6uFadALSQj1HK6XoAJyKaE5HS9mBtPWceJelAlTaQ6Q5lQdc08ErEegHx8TIRQTEYAGJ+a4xYBDTAkMobQzwDDPAsMaFw-h6AmQgugmwPqL00BlJRdACRKEuhMjQFBJlvQQXUPocw8mfLhXQBpYsNgG1KXQB8Ls-OhI66Gtpua2uDrEQgA","body":"forget_value(C, \"user\"); ","output":"\"Probe: Celsius temp = ?\"\n\"Probe: Fahrenheit temp = ?\"\n\"done\""},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":" finds that the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"user\""},{"body":",\n      \n    who set its value originally, is now retracting that value, so\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":" agrees to lose its value, as shown by the\n    probe, and informs the rest of the network of this fact. This information\n    eventually propagates to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"F"},{"body":", which now finds\n    that it has no reason for continuing to believe that its own\n    value is 77.  Thus, ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"F"},{"body":" also\n    gives up its value, as shown by the probe.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p8","child":[{"body":"\n    Now that ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"F"},{"body":" has no value, we are free to set it\n    to 212:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":7,"eval":true,"prependLength":214,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQALAQwGcB9ANwYBsCBTAChI0iPclQBOASlABvbKHmgxPMgTG1BRYaLF8ARI1YduPXRIDc2AL75i5arQDmy9l14ChIsuKmyFi5arqHtp6RrymFtaEpJQ0oEzOYfwaWl5iADSgwgDuLsaZFER44gC2DERkPnIKSipqoCme4noJZHnhEnw57TwFRaXllZE2MfagxWJObUnumk0Z-mRiDNpVfrWBDcFpehNTpny1y6vD0XZxjeSzqeKZ3RpMSwyFlTLV8hv1lzu63wf3NEeyxe5isuDOsVoAAcxFQAEb8IgMEq9LZzVZvPwQsYwl4sGHw-hJNZ+BQAEwoTChnAYAE89LBYQiAFygXSgADUWWRPE5bNAAF5+VygYUHBQ8PTiaC-NYsbZIaACSQeExWN0ZiTSUqxHiCQi+FMetd5hIZQo5QpsXFlarWHtEq5+FrSbiKvimfxdAB+CLvUCW+TW2gow48ACOvEeLvWAXqSkjqrIgoFQt0kHoDDYvIYoCSaF0-u1pO9OqoKrVLA1Tr4EiLxYUrITUeTqbTGc4VEeoBKtLzToL9YboFLtsrDumNbrw+1rJ4YlhOmbScyumIAGsiFRsrRl92ALT7ssIv2y-3fE3aTIo80fOMhnjDEbnWgTFg8FZ0d8ADxVULIfA8L+PD-vYmTRJknCUq8vhWgqYydlQUJ8BQZA8CUTAxgoEqgCh6oEJwnAoWhGFmpiM6LJsuhkjQJgWA2ligDwnAJKAOF8HQH5ksR6GYSmQpAX+kJYdqny0IhyFkM8RGobxZr0cWjHMaxsEztEHFcTxpG3sOYmgBJfBSRQMkkZhOlnhZNT3vpVBIXwUHRk+wZsf0YglCwDBwlQBCTsYsxAs8FQunpDxPC8egZow2agLm+Z+tYz6KoUEzuZ53ltFuxqhcCQXkXedRBEQAXhemNndr2-bGAWoIJc5ZTrjwLDfM0LqcMolW8IK4xcAkCnyG1ybJQMFRdXgPWPv6A1osVFRMF1RAEZwfXjPBcStCwvbGjkRiZK0aGSHlpLsQAhAYxo3iJpJJPNPDZEYy0NkNbmDF1e3zg9xZ6W+H4kF+gkgQBb0ZEOFGg0drmpV5Pk9OkINg-D2WBWQmEffISksby7HXcdqZZLdRiXX486LvZ0F8Ekdz41wEirhoTwUi+p6KUxGOHQ2em6BQDhbkoZK6KjAb+oGK2jHEE4bbSxpHCsaSXex0vaPxLkpYMhPYRDL1CmNGMC7GBXjOI76fj+Qlhk8V5w-DoNPZD6VVlQMOW1bM6Iy8KMg+jKlO5R9Sc9z4g8HzAvC8LzkXgCRVhblqlHXguGUlWi18CiJQIjoEczWQmSu7NZpq-IOfI11ULPOnt1NYCUdZ9NVfuwxLMqcLfjsWdMwXWzxY2x5UO+W4GdV+ZFoN7y0hN1Z+vUbR-NC-6dX8HuMEg-LEYtkr+jMD0pgd6J1k2y9ONa+NwfD2xcdhom3ZtmySRbzH7PWUkx-KZjZ8L2v603-nPu0Otm2Px7J9l4X1bLjXQE5b7ey+uII0f8nRP1ZkA1eV9fjbAgaDEK2x4Fe1BsTZoC9Vwbi3DuUASF5wMEVIeNENwxBM21CHf0ekUROVWiGAilBqQUHnMnAAjNeAATJkAkZICDkBdM5Mc6py6am3qfXCHEN5t24VIAAZMo0ARpFFSCvgABmnA2AAPvo3CrcawlD4SotRGjTHmKVror+H8axCJEdXbR14eCDzRoAs+Ji-IlCUaAVRmZDDWLInfYsDi-JOPIJkKxvj-EACp1GOl8eYtxHiAxeOMQoxxsJhGiICWonxbg-GhO9hE4pAikm934FE14YBYnFKUWkrBL8snBMibk5xFignnXMfY5JjSYkDJqZ0-J9ThnJ1ST2dxLSZD0PlKLaEsIKz2mgRMy64sZi1OaSDTZpjeHTPSXslJOyGwSKrFIqcy1Q4sOmefFsctX4ryTGvSKWYcwdR4NVGRfhznVj8ukz2rT7kvOQR2LsyYKpxS-uc45bhAUnzCdqXBS5nmPAIUQTc25dxouTJQkobCKAcPnLQ0k8yFAXj8acil2xJnUoLrS7ZhzlqMImrVW5DAyRki4QwA5DBKlMAICUMRty-mXIBTIlu2S-K8u6UU-g-LSmg3KfwQVJQhnVL4LKvkDSFVTJvLMqV7S3DasCfKvgaqlUURVVqypuqLVCqkEee1sr6VksyfI41eq5XSrcJa-pmreUauNJa0AzqJmKrdbKRF5KgyiuWXaFgcLnQyOTQ69VzLdlrMDQcg1WbJgRsqXms5CbKz-Phdc2etzQwL0ebhN+YLMzRVigONBFExW5E1Iap5wDXllUhX2aFPyFCwuzcaBFz9h3yBRSC9FbJCHYv8L2yhnLuU0MBTPPwF4g2Zq3bS-lbqLxqrday5hiya6DHJk6bO2xvCHTnrOxeDYZ34PnZiohOLl1HlCoMUlwsLzNQWMWhQNrAOZApru8emwmFgkSmMFULEKAEHtAwOgSgiCcVQhXIg2YxD7QEOBF0oVQAEC6vVRqgHazLWI2wMjDAGrYeoVR88ldQDZDowxyjOliPfg4xR29OhuOsb7EKcjjH5jMb8ASzg7CoJcJIJkbImQCA6Wk7JzhOg2CZG-MpnSq6uFadALSQj1HK6XoAJyKaE5HS9mBtPWceJelAlTaQ6Q5lQdc08ErEegHx8TIRQTEYAGJ+a4xYBDTAkMobQzwDDPAsMaFw-h6AmQgugmwPqL00BlJRdACRKEuhMjQFBJlvQQXUPocw8mfLhXQBpYsNgG1KXQB8Ls-OhI66Gtpua2uDrfpGsTKC5kPh3DKm9ZJeYIAA","body":"set_value(F, 212, \"user\"); ","output":"\"Probe: Fahrenheit temp = 212\"\n\"Probe: Celsius temp = 100\"\n\"done\""},{"body":"\n    This new value, when propagated through the network, forces\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":" to have a value of 100, and this is\n    registered by the probe on ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":". Notice that the\n    very same network is being used to compute ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":"\n    given ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"F"},{"body":" and to compute\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"F"},{"body":" given ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"C"},{"body":".\n    This nondirectionality of computation is the distinguishing feature of\n    constraint-based systems.\n  ","tag":"#text"}]},{"tag":"SUBHEADING","id":"#h2","child":[{"body":"Implementing the constraint system","tag":"#text"}]},{"tag":"TEXT","id":"#p9","child":[{"body":"\n    The constraint system is implemented via procedural objects with local\n    state, in a manner very similar to the digital-circuit simulator of\n    section ","tag":"#text"},{"tag":"REF","body":"3.3.4","href":"/sicpjs/3.3.4"},{"body":".  Although the primitive\n    objects of the constraint system are somewhat more complex, the overall\n    system is simpler, since there is no concern about agendas and logic delays.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p10","child":[{"body":"\n    The basic\n    \n    operations on connectors are the following:\n    ","tag":"#text"},{"tag":"UL","child":[{"tag":"LI","child":[{"tag":"JAVASCRIPTINLINE","body":"has_value("},{"tag":"META","body":"connector"},{"tag":"JAVASCRIPTINLINE","body":")"},{"tag":"BR"},{"body":"\n        tells whether the connector has a value.\n      ","tag":"#text"}]},{"tag":"LI","child":[{"tag":"JAVASCRIPTINLINE","body":"get_value("},{"tag":"META","body":"connector"},{"tag":"JAVASCRIPTINLINE","body":")"},{"tag":"BR"},{"body":"\n        returns the connector's current value.\n      ","tag":"#text"}]},{"tag":"LI","child":[{"tag":"JAVASCRIPTINLINE","body":"set_value("},{"tag":"META","body":"connector"},{"tag":"JAVASCRIPTINLINE","body":", "},{"tag":"META","body":"new-value"},{"tag":"JAVASCRIPTINLINE","body":","},{"tag":"META","body":"informant"},{"tag":"JAVASCRIPTINLINE","body":")"},{"tag":"BR"},{"body":"\n        indicates that the informant is requesting the connector to set its\n        value to the new value.\n      ","tag":"#text"}]},{"tag":"LI","child":[{"tag":"JAVASCRIPTINLINE","body":"forget_value("},{"tag":"META","body":"connector"},{"tag":"JAVASCRIPTINLINE","body":","},{"tag":"META","body":"retractor"},{"tag":"JAVASCRIPTINLINE","body":")"},{"tag":"BR"},{"body":"\n        tells the connector that the retractor is requesting it to forget its\n\tvalue.\n      ","tag":"#text"}]},{"tag":"LI","child":[{"tag":"JAVASCRIPTINLINE","body":"connect("},{"tag":"META","body":"connector"},{"tag":"JAVASCRIPTINLINE","body":","},{"tag":"META","body":"new-constraint"},{"tag":"JAVASCRIPTINLINE","body":")"},{"tag":"BR"},{"body":"\n        tells the connector to participate in the new constraint.\n      ","tag":"#text"}]}]},{"body":"\n    The connectors communicate with the constraints by means of the\n    functions","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"inform_about_value"},{"body":",\n      \n    which tells the given constraint that the connector has a value, and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"inform_about_no_value"},{"body":",\n      \n    which tells the constraint that the connector has lost its value.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p11","child":[{"tag":"JAVASCRIPTINLINE","body":"Adder"},{"body":" constructs an adder constraint among\n    summand connectors ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a1"},{"body":" and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a2"},{"body":" and a ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"sum"},{"body":"\n    connector.  An adder is implemented as a\n    function\n    with local state (the\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"me"},{"body":" below):\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":8,"eval":true,"prependLength":17,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQALAQwGcB9ANwYBsCBTAChI0iPclQBOASlABvbKHmgxPMgTG1BRYaLF8ARI1YduPXRIDc2AL75i5arQDmy9l14ChIsuKmyFi5arqHtp6RrymFtaEpJQ0oEzOYfwaWl5iADSgwgDuLsaZFER44gC2DERkPnIKSipqoCme4noJZHnhEnw57TwFRaXllZE2MfagxWJObUnumk0Z-mRiDNpVfrWBDcFpehNTpny1y6vD0XZxjeSzqeKZ3RpMSwyFlTLV8hv1lzu63wf3NEeyxe5isuDOsVoDAAJtCeDoGABGTIMABMmSYBBKawUELGAAcxFQSDwmKxujMcX55BQ8KA+AYenwkVIAGSs+jMJloiRU6l+VpMzElTJTbmIqQAalAYpmPMyJR4oP58ksoB4nASoFp9MZcoloHZnMMrn4wt5bxV1MFcvRMsSpr45tAAFp7dNHSyFUqLFa1RqtTqGVzbWyOXrHea+VabZ7ke6hVipG7ZZ7URJvcqVf7NTwZNY-AXcbZIaBCcTSaw9g7jHxo7jxKna8LM76VdWPbWka33tSO9y7Yqs-zyySySwKY7h6Ai-I8XFFYceABHXiPes0ulL1eksigAC8h9AukgnLYeYYoCSaFMlqtClHlYnPFylLb-Jzga3Sh3jwPR5PUBOCoP8SgATyvU0bw3alH3Hfs317Qt1VzO973VMQiR0H81zITJdGIABrIgqGyWgcN3V03RhOExAiJCFFnGde2+Zl4yHd8tjmK40R7PxWJbUAON7T5aEVSIgA","body":"function adder(a1, a2, sum) {\n    function process_new_value() {\n        if (has_value(a1) && has_value(a2)) {\n            set_value(sum, get_value(a1) + get_value(a2), me);\n        } else if (has_value(a1) && has_value(sum)) {\n            set_value(a2, get_value(sum) - get_value(a1), me);\n        } else if (has_value(a2) && has_value(sum)) {\n            set_value(a1, get_value(sum) - get_value(a2), me);\n        } else {}\n    }\n    function process_forget_value() {\n        forget_value(sum, me);\n        forget_value(a1, me);\n        forget_value(a2, me);\n        process_new_value();\n    }\n    function me(request) {\n        if (request === \"I have a value.\") {\n            process_new_value();\n        } else if (request === \"I lost my value.\") {\n            process_forget_value();\n        } else {\n            error(request, \"unknown request -- adder\");\n        }\n    }\n    connect(a1, me);\n    connect(a2, me);\n    connect(sum, me);\n    return me;\n} "},{"body":"\n\tThe function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"adder"},{"body":"\n    connects the new adder to the designated\n    connectors and returns it as its value.  The\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"me"},{"body":", which represents the adder, acts as a\n    dispatch to the local\n    functions.\n    The following\n    \"syntax interfaces\" (see\n    footnote ","tag":"#text"},{"tag":"REF","body":2,"href":"/sicpjs/3.3.4#footnote-2"},{"body":" in\n    section ","tag":"#text"},{"tag":"REF","body":"3.3.4","href":"/sicpjs/3.3.4"},{"body":") are used in conjunction\n    with the dispatch:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":9,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQKi8qAnAWwH0BDAIyoLLYBuHADYEApgAoSNAM5kmHemQCUoAN7ZQW0EzFkCTWtKJyFSiQCJIoABYcBY0B1BDRYtBeUBubAF9chKSUNHQMzOzcvPxEVIIi4lKy8opEKuqa2rr6hqDGpilkltbCVHKgLACeLvHunj6+QA","body":"function inform_about_value(constraint) {\n    return constraint(\"I have a value.\");\n}\n\nfunction inform_about_no_value(constraint) {\n    return constraint(\"I lost my value.\");\n} "},{"body":"\n    The adder's local\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"process_new_value"},{"body":"\n    is called when the adder is informed that one of its connectors has a value.\n    The adder first checks to see if both ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a1"},{"body":" and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a2"},{"body":" have values. If so, it tells\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"sum"},{"body":" to set its value to the sum of the two\n    addends. The ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"informant"},{"body":" argument to\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"set_value"},{"body":"\n    is ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"me"},{"body":", which is the adder object itself.  If\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a1"},{"body":" and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a2"},{"body":" do not\n    both have values, then the adder checks to see if perhaps\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a1"},{"body":" and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"sum"},{"body":" have\n    values.  If so, it sets ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a2"},{"body":" to the difference of\n    these two. Finally, if ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a2"},{"body":" and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"sum"},{"body":" have values, this gives the adder enough\n    information to set ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a1"},{"body":".  If the adder is told\n    that one of its connectors has lost a value, it requests that all of its\n    connectors now lose their values.  (Only those values that were set by\n    this adder are actually lost.)  Then it runs\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"process_new_value"},{"body":".\n      \n    The reason for this last step is that one or more connectors may still\n    have a value (that is, a connector may have had a value that was not\n    originally set by the adder), and these values may need to be\n    propagated back through the adder.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p12","child":[{"body":"\n    A multiplier is very similar to an adder. It will set its\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"product"},{"body":" to 0 if either of the factors is 0,\n    even if the other factor is not known.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":10,"eval":true,"prependLength":17,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQALAQwGcB9ANwYBsCBTAChI0iPclQBOASlABvbKHmgxPMgTG1BRYaLF8ARI1YduPXRIDc2AL75i5arQDmy9l14ChIsuKmyFi5arqHtp6RrymFtaEpJQ0oEzOYfwaWl5iADSgwgDuLsaZFER44gC2DERkPnIKSipqoCme4noJZHnhEnw57TwFRaXllZE2MfagxWJObUnumk0Z-mRiDNpVfrWBDcFpehNTpny1y6vD0XZxjeSzqeKZ3RpMSwyFlTLV8hv1lzu63wf3NEeyxe5isuDOsVoJQInEoAAdOBQeDoSgBGTIlABMmThYioABMCOQ1goIWNcVQSDwmKxujMSX55BQ8KA+HwDD0+GipAAyHmgKac7mgAC8YtAAAYJO9GaAAD5y1kcmZY3n8wUqzFSMUiyUSBmyhStTkUwnkTISjE8UGG0CWUA8TgJUDMpXMIWotX0d2a-VvW1+Y0zU1EsiZDWufjCgBUAsSka5WqtNsN9sdztd7J9CZDxNAfO9hgT3INtqDxexcemObxZteYAjxi5nuTFltaadPBdLKzRabudeBeVFb9vgD8nLTbR4fj-droakDdnblVrZlfg7zuk1g3MrJcQpVJpLD2y-4pdJ4kbbgHa9tp+rU-RoBK1rbhofQsrr5TssP1NpHhcnpd95B3UlbEhF9+CUABHXhHgvJkezghCyFFcVdEgb02C7BhQCSNBTH9cdQH-Y86QTX9GU3LtM1Q6l0J1UAsNATgqEeF8AE8CMjIikMZcjWE-ED1wUWiSPHZE8R0BjHkyXRiAAayIKhsloOT0IAWi0l8YXhRFkQiMSwJlcD5G+Zs7wUSysWsiztj4W9oOoz4oR4SIgA","body":"function multiplier(m1, m2, product) {\n    function process_new_value() {\n        if ((has_value(m1) && get_value(m1) === 0)\n         || (has_value(m2) && get_value(m2) === 0)) {\n            set_value(product, 0, me);\n        } else if (has_value(m1) && has_value(m2)) {\n            set_value(product, get_value(m1) * get_value(m2), me);\n        } else if (has_value(product) && has_value(m1)) {\n            set_value(m2, get_value(product) / get_value(m1), me);\n        } else if (has_value(product) && has_value(m2)) {\n            set_value(m1, get_value(product) / get_value(m2), me);\n        } else {}\n    }\n    function process_forget_value() {\n        forget_value(product, me);\n        forget_value(m1, me);\n        forget_value(m2, me);\n        process_new_value();\n    }\n    function me(request) {\n        if (request === \"I have a value.\") {\n            process_new_value();\n        } else if (request === \"I lost my value.\") {\n            process_forget_value();\n        } else {\n            error(request, \"unknown request -- multiplier\");\n        }\n    }\n    connect(m1, me);\n    connect(m2, me);\n    connect(product, me);\n    return me;\n} "},{"body":"\n    A ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"constant"},{"body":" constructor simply sets the value of\n    the designated connector.  Any\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"I have a value.\""},{"body":"\n    or\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"I lost my value.\""},{"body":"\n    message sent to the constant box will produce an error.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":11,"eval":true,"prependLength":17,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQALAQwGcB9ANwYBsCBTAChI0iPclQBOASlABvbKHmgxPMgTG1BRYaLF8ARI1YduPXRIDc2AL75i5arQDmy9l14ChIsuKmyFi5arqHtp6RrymFtaEpJQ0oEzOYfwaWl5iADSgwgDuLsaZFER44gC2DERkPnIKSipqoCme4noJZHnhEnw57TwFRaXllZE2MfagxWJObUnumk0Z-mRiDNpVfrWBDcFpehNTpny1y6vD0XZxjeSzqeKZ3RpMSwyFlTLV8hv1lzu63wf3NEeyxe5isuDOsSCREegz4SUy328bz8ELGJX4SgAjrxHms-AoeGIxM0sTiyJldMQANZEKjZWikniPUAAWhZW2hZEGEXeoGsfm+13mmXRoL8rR6Qu0mXhoFFFnWAXq6MiQA","body":"function constant(value, connector) {\n    function me(request) {\n        error(request, \"unknown request -- constant\");\n    }\n    connect(connector, me);\n    set_value(connector, value, me);\n    return me;\n} "},{"body":"\n    Finally, a probe prints a message about the setting or unsetting of\n    the designated connector:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":12,"eval":true,"prependLength":17,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQALAQwGcB9ANwYBsCBTAChI0iPclQBOASlABvbKHmgxPMgTG1BRYaLF8ARI1YduPXRIDc2AL75i5arQDmy9l14ChIsuKmyFi5arqHtp6RrymFtaEpJQ0oEzOYfwaWl5iADSgwgDuLsaZFER44gC2DERkPnIKSipqoCme4noJZHnhEnw57TwFRaXllZE2MfagxWJObUnumk0Z-mRiDNpVfrWBDcFpehNTpny1y6vD0XZxjeSzqeKZ3RpMSwyFlTLV8hv1lzu63wf3NEeyxe5isuDOsVoAAcxFQAEb8IgMEq9LZzVZvPwQsYwl4sGHw-hJNZ+BQAEwoTChnAYAE89LBYQiAFygXSgADUWWRPE5bNAAF5+VygYUHBQ8PTiaC-NYsbZIaACSQeExWN0ZiTSUqxHiCQi+FMetd5hIZQo5QpsXFlarWHtEq5+FrSbiKvimfxdAB+CLvUCW+TW2gow48ACOvEeLvWAXqSkjqrIgoFQt0kHoDDYvIYoCSaF0-u1pO9OqoKrVLA1Tr4EiLxYUrITUeTqbTGc4VEeoBKtLzToL9YboFLtsrDumNbrw+1rJ4YlhOmbScyumIAGsiFRsrRl92ALT7ssIv2y-3fE3aTIo80fOMhniRIA","body":"function probe(name, connector) {\n    function print_probe(value) {\n        display(\"Probe: \" + name + \" = \" + stringify(value));\n    }\n    function process_new_value() {\n        print_probe(get_value(connector));\n    }\n    function process_forget_value() {\n        print_probe(\"?\");\n    }\n    function me(request) {\n        return request === \"I have a value.\"\n               ? process_new_value()\n               : request === \"I lost my value.\"\n               ? process_forget_value()\n               : error(request, \"unknown request -- probe\");\n    }\n    connect(connector, me);\n    return me;\n} "}]},{"tag":"SUBHEADING","id":"#h3","child":[{"body":"Representing connectors","tag":"#text"}]},{"tag":"TEXT","id":"#p13","child":[{"body":"\n    A connector is represented as a procedural object with local state variables\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"value"},{"body":", the current value of the connector;\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"informant"},{"body":", the object that set the\n    connector's value; and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"constraints"},{"body":",\n    a list of the constraints in which the connector participates.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":13,"eval":true,"prependLength":39,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQ8qAnAfQFMBDEgC1YA8SWADmQAULPoMo0ANHWIyANhQDOZAJSgA3tlA7ZpSbXlUqA4RTIsAtkvVbd90BTygzSpkQLz5Zi9dW3tByCGFjICBloAIgATGhZIgG5AoIBfUBZ5JRZHZ2FOdmifKxtQAF5y9PEhaiIAoODQ8MNjUzI2Cm9zYv8k+tA0jKzNZL69PIKiv1Ve0Z0QsIjQIxNhNo7Jm2mR+xSR3ft5pqWW4UUVLd38YnIaxyJ6BksmNgAjKgIyJgA3NnkCFmEJBoKgY7SIamGB0aiyBRBBYJEkUgoE4bC+2TYoB+fxYaEiF1whH0two90YT1e70+RCo31+-0BwLIoNJELsukOMKZLPBwiRxxUoEsAE8sfTcfikpciTcaCi2G5sQzYUQWORGHUOdDaCq1WRGHzUYrxZLsLsZQZQABzUJ0nGMoiq9UMTVzbWgXXOvlK+IEi23LKfH0Op36hgyVUAdzt-xkpIeljY4NdoE5OpooYNkUDMd9wijubjZMeSbUUquxLlDxtQfFIb1jBk81BzpTaY9GYbDD51dC+OEzY4Yb910tnpE48boALsPhrLb7sn3ci4-7M+5CIJFdltETAGsWEwl8IU-JQmKcWU6L8sjMdGeyHcE6Wr3gbyw70tz7PmQilFePC8T9-TlHMRVzfMWEjbEZEDCwXUheonBcABCI0IMsFh-EQ2YfQAqDsU-Pp43JF9SlAOCWAYIj6nbB5WA4bgxH4IRhEo8NtlmLjRhIx5njeD5C047iRPsH8eTIGwaJ0AZMmyZDhDwlCKijbEUz6KiGANM4RB9CMCN+VQZBXGhf2iCgd1NPpZKGdlZnbSIKCtGkQmiRJhP6PYRhA2he0+cDg0HVscIcBSgrDMoKl4xNkxC4jixix9yLfOTpIcOjGAYrheBYkRwsbDzRJE6L+KpdxaT0wqiq48S-y2az0jkuLaPdRznMYFg3LS-ZdB6nQfI7R09Ug6NavnZqdAU5R3E8bxMMsF4qJGo8N1ZGQxvBTZ1PqDbJKvAR2m7dc4V-NbBrnTb6vqGzsg0PrQtydDg0w7C7J4hLSsE4NjoussPJuzR7qhBYoliVV3J2bzR1uTCBxYABHf5zgmnIXBCRGWEFcpyMiJ6TW2hoQafUjwVAZTkvfbrGqGMKEaRpKKkiH18RR4Gjh9KnBnk3J0fpyKcZzZmCfS90wOFXNOaa2mMaxxm-JZt6+gyhgayYALxUlmmebpzGGZx1dhbZrkhvITXbqqnRNINXndeM4g9xpSNaBMKi2EtABad3BszBgrOuryjd3D8zSAA","body":"function make_connector() {\n    let value = false;\n    let informant = false;\n    let constraints = null;\n    function set_my_value(newval, setter) {\n        if (!has_value(me)) {\n            value = newval;\n            informant = setter;\n            return for_each_except(setter,\n                                   inform_about_value,\n                                   constraints);\n        } else if (value !== newval) {\n            error(list(value, newval), \"contradiction\");\n        } else {\n            return \"ignored\";\n        }\n    }\n    function forget_my_value(retractor) {\n        if (retractor === informant) {\n            informant = false;\n            return for_each_except(retractor,\n                                   inform_about_no_value,\n                                   constraints);\n        } else {\n            return \"ignored\";\n        }\n    }\n    function connect(new_constraint) {\n        if (is_null(member(new_constraint, constraints))) {\n            constraints = pair(new_constraint, constraints);\n        } else {}\n        if (has_value(me)) {\n            inform_about_value(new_constraint);\n        } else {}\n        return \"done\";\n    }\n    function me(request) {\n        if (request === \"has_value\") {\n            return informant !== false;\n        } else if (request === \"value\") {\n            return value;\n        } else if (request === \"set_value\") {\n            return set_my_value;\n        } else if (request === \"forget\") {\n            return forget_my_value;\n        } else if (request === \"connect\") {\n            return connect;\n        } else {\n            error(request, \"unknown operation -- connector\");\n        }\n    }\n    return me;\n} "}]},{"tag":"TEXT","id":"#p14","child":[{"body":"\n    The connector's local\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"set_my_value"},{"body":"\n    is called when there is a request to set the connector's value.  If\n    the connector does not currently have a value, it will set its value and\n    remember as ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"informant"},{"body":" the constraint that\n    requested the value to be set.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-2","body":"2","href":"/sicpjs/3.3.5#footnote-2"},{"body":" Then the connector will\n    notify all of its participating constraints except the constraint that\n    requested the value to be set. This is accomplished using the following\n    iterator, which applies a designated\n    function\n    to all items in a list except a given one:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":14,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQ8qAnAfQFMBDEgC1YA8SWADmQAULPoMo0ANHWIyANhQDOZAJSgA3tlA7ZpSbXlUqA4RTIsAtkvVbd90BTygzSpkQLz5Zi9dW3tByCGFjICBloAIgATGhZIgG5AoIBfUBZ5JRZHZ2FOdmifKxtQAF5y9PEhaiIAoODQ8MNjUzI2Cm9zYv8k+tA0jKzNZL69PIKiv1Ve0Z0QsIjQIxNhNo7Jm2mR+xSR3ft5pqWW4UUVLZSgA","body":"function for_each_except(exception, fun, list) {\n    function loop(items) {\n        if (is_null(items)) {\n            return \"done\";\n        } else if (head(items) === exception) {\n            return loop(tail(items));\n        } else {\n            fun(head(items));\n            return loop(tail(items));\n        }\n    }\n    return loop(list);\n} "}]},{"tag":"TEXT","id":"#p15","child":[{"body":"\n    If a connector is asked to forget its value, it runs\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"forget_my_value"},{"body":",\n\ta local function that\n      \n    first checks to make sure that the request is coming from the same\n    object that set the value originally.  If so, the connector informs its\n    associated constraints about the loss of the value.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p16","child":[{"body":"\n    The local\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"connect"},{"body":" adds the designated new constraint\n    to the list of constraints if it is not already in that\n    list.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-3","body":"3","href":"/sicpjs/3.3.5#footnote-3"},{"body":"\n    Then, if the connector has a value, it informs the new constraint of this\n    fact.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p17","child":[{"body":"\n    The connector's\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"me"},{"body":" serves as a dispatch to the other internal\n    functions\n    and also represents the connector as an object. The following\n    functions\n    provide a syntax interface for the dispatch:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":15,"eval":true,"prependLength":0,"program":"chap=3&prgrm=PTAEGUEkGEAVQFLlAZgHToKwChsDMBXAOwGMAXASwHsjQALAQwGcB9ANwYBsCBTAChI0iPclQBOASlABvbKHmgxPMgTG1BRYaLF8ARI1YduPXRIDc2AL75i5arQDmy9l14ChIsuKmyFi5arqHtp6RrymFtaEpJQ0oEzOYfwaWl5iADSgwgDuLsaZFER44gC2DERkPnIKSipqoCme4noJZHnhEnw57TwFRaXllZE2MfagxWJObUnumk0Z-mRiDNpVfrWBDcFpehNTpny1y6vD0XZxjeSzqeKZ3RpMSwyFlTLV8hv1lzu63wf3NEeyxe5isQA","body":"function has_value(connector) {\n    return connector(\"has_value\");\n}\nfunction get_value(connector) {\n    return connector(\"value\");\n}\nfunction set_value(connector, new_value, informant) {\n    return connector(\"set_value\")(new_value, informant);\n}\nfunction forget_value(connector, retractor) {\n    return connector(\"forget\")(retractor);\n}\nfunction connect(connector, new_constraint) {\n    return connector(\"connect\")(new_constraint);\n} "}]},{"tag":"EXERCISE","title":"Exercise 3.33","id":"#ex-3.33","child":[{"body":"\n    Using primitive multiplier, adder, and constant constraints, define a\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"averager"},{"body":" that takes three connectors\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a"},{"body":", ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"b"},{"body":",\n    and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"c"},{"body":" as inputs and establishes the\n    constraint that the value of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"c"},{"body":" is the average of the values of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a"},{"body":" and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"b"},{"body":".\n  ","tag":"#text"}]},{"tag":"EXERCISE","title":"Exercise 3.34","id":"#ex-3.34","child":[{"body":"\n    Louis Reasoner wants to build a\n    \n    squarer, a constraint device with two\n    terminals such that the value of connector\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"b"},{"body":" on the second\n    terminal will always be the square of the value\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a"},{"body":" on the first\n    terminal.  He proposes the following simple device made from a\n    multiplier:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":16,"eval":false,"body":"function squarer(a, b) {\n    return multiplier(a, a, b);\n}"},{"body":"\n    There is a serious flaw in this idea.  Explain.\n    ","tag":"#text"}]},{"tag":"EXERCISE","title":"Exercise 3.35","id":"#ex-3.35","child":[{"body":"\n    Ben Bitdiddle tells Louis that one way to avoid the trouble in\n    exercise ","tag":"#text"},{"tag":"REF","body":"3.34","href":"/sicpjs/3.3.5#ex-3.34"},{"body":" is to define a\n    \n    squarer as a new primitive constraint.  Fill in the missing\n    portions in Ben's outline for a\n    function\n    to implement such a constraint:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nfunction squarer(a, b) {\n    function process_new_value() {\n        if (has_value(b)) {\n            if (get_value(b) < 0) {\n                error(get_value(b), \"square less than 0 -- squarer\");\n            } else {\n                $alternative_1$\n            } else {\n                $alternative_2$\n            }\n        }\n    }\n    function process_forget_value() {\n        $body_1$\n    }\n    function me(request) {\n        $body_2$\n    }\n    $statements$\n    return me;\n}\n      "}]},{"tag":"EXERCISE","title":"Exercise 3.36","id":"#ex-3.36","child":[{"body":"\n    Suppose we evaluate the following sequence of\n    \n\tstatements\n      \n    in the\n    program\n    environment:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":17,"eval":false,"body":"const a = make_connector();\nconst b = make_connector();\nset_value(a, 10, \"user\");"},{"body":"\n    At some time during evaluation of the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"set_value"},{"body":",\n    the following expression from the connector's local\n    function\n    is evaluated:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":18,"eval":false,"body":"for_each_except(setter, inform_about_value, constraints);"},{"body":"\n    Draw an environment diagram showing the environment in which the above\n    expression is evaluated.\n  ","tag":"#text"}]},{"tag":"EXERCISE","title":"Exercise 3.37","id":"#ex-3.37","child":[{"body":"\n    The\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"celsius_fahrenheit_converter"},{"body":"function\n    is cumbersome when\n    compared with a more expression-oriented style of definition, such as\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":19,"eval":false,"body":"function celsius_fahrenheit_converter(x) {\n    return cplus(cmul(cdiv(cv(9), cv(5)), x), cv(32));\n}\n\nconst C = make_connector();    \nconst F = celsius_fahrenheit_converter(C);"},{"body":"\n    Here\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"cplus"},{"body":",","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"cmul"},{"body":",\n    etc. are the \"constraint\"\n    versions of the  arithmetic operations.  For example,\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"cplus"},{"body":"\n    takes two connectors as arguments and returns a connector that is\n    related to these by an adder constraint:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":20,"eval":false,"body":"function cplus(x, y) {\n    const z = make_connector();\n    adder(x, y, z);\n    return z;\n}"},{"body":"\n    Define analogous\n    functions","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"cminus"},{"body":",","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"cmul"},{"body":",","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"cdiv"},{"body":",\n    and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"cv"},{"body":"\n    (constant value) that enable us to define compound constraints as in\n    the converter example above.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-4","body":"4","href":"/sicpjs/3.3.5#footnote-4"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-1","count":1,"href":"/sicpjs/3.3.5#footnote-link-1","child":[{"body":"Constraint propagation first appeared in the incredibly\n    forward-looking \n    \n    SKETCHPAD system of\n    \n    Ivan Sutherland (1963).  A beautiful constraint-propagation system based\n    on the \n    \n    Smalltalk language was developed by \n    \n    Alan Borning (1977) at \n    \n    Xerox Palo Alto Research Center.  Sussman, Stallman, and Steele\n    applied constraint propagation to electrical circuit analysis \n    \n    (Sussman and Stallman 1975; \n    Sussman and Steele 1980). \n    \n    TK!Solver\n    \n    (Konopasek and Jayaraman 1984) \n    is an extensive modeling environment based on constraints.","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-2","count":2,"href":"/sicpjs/3.3.5#footnote-link-2","child":[{"body":"The\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"setter"},{"body":" might not be a constraint.  In our\n    temperature example, we used\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"user\""},{"body":"\n    as the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"setter"},{"body":".","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-3","count":3,"href":"/sicpjs/3.3.5#footnote-link-3","child":[{"body":"We can use the function\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"member"},{"body":"\n    from section ","tag":"#text"},{"tag":"REF","body":"2.3.1","href":"/sicpjs/2.3.1"},{"body":"\n    to test whether\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"new_constraint"},{"body":" is already in\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"constraints"},{"body":",\n    although\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"member"},{"body":" was introduced\n    as being limited to numbers and strings, because\n    we extended\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"==="},{"body":" to pointer equality in\n    section ","tag":"#text"},{"tag":"REF","body":"3.3.1","href":"/sicpjs/3.3.1"},{"body":".","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-4","count":4,"href":"/sicpjs/3.3.5#footnote-link-4","child":[{"body":"The\n    \n    expression-oriented format\n    is convenient because it avoids the need to name the intermediate\n    expressions in a computation.  Our original formulation of the\n    constraint language is cumbersome in the same way that many languages\n    are cumbersome when dealing with operations on compound data.  For\n    example, if we wanted to compute the product\n    ","tag":"#text"},{"body":"${(a+b)}\\cdot{(c+d)}$","tag":"LATEX"},{"body":", where the\n    variables represent vectors, we could work in\n    \"imperative style,\"\n    using\n    functions\n    that set the values of designated vector arguments\n    but do not themselves return vectors as values:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":21,"eval":false,"body":"v_sum(\"a\", \"b\", temp1);\nv_sum(\"c\", \"d\", temp2);\nv_prod(temp1, temp2, answer);"},{"body":"\n    Alternatively, we could deal with expressions, using\n    functions\n    that return vectors as values, and thus avoid\n    explicitly mentioning ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"temp1"},{"body":" and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"temp2"},{"body":":\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":22,"eval":false,"body":"const answer = v_prod(v_sum(\"a\", \"b\"), v_sum(\"c\", \"d\"));"},{"body":"\n    Since\n    JavaScript\n    allows us to return compound objects as values of\n    functions,\n    we can transform our imperative-style constraint language\n    into an expression-oriented style as shown in this exercise.\n    \n    Given the advantage of the\n    expression-oriented format, one might ask if there is any reason to\n    have implemented the system in imperative style, as we did in this\n    section.  One reason is that the non-expression-oriented constraint\n    language provides a handle on constraint objects (e.g., the value of\n    the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"adder"},{"body":"function)\n    as well as on connector objects.  This is\n    useful if we wish to extend the system with new operations that\n    communicate with constraints directly rather than only indirectly via\n    operations on connectors.  Although it is easy to implement the\n    expression-oriented style in terms of the imperative implementation,\n    it is very difficult to do the converse.","tag":"#text"}]}]