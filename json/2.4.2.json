[{"id":"/sicpjs/2.4.2","tag":"TITLE","body":"2.4.2  \n    Tagged data"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    One way to view data abstraction is as an application of the\n    \"principle of least commitment.\"  In implementing the\n    complex-number system in\n    section ","tag":"#text"},{"tag":"REF","body":"2.4.1","href":"/sicpjs/2.4.1"},{"body":", we can\n    use either Ben's rectangular representation or Alyssa's polar\n    representation.  The abstraction barrier formed by the selectors and\n    constructors permits us to defer to the last possible moment the choice of\n    a concrete representation for our data objects and thus retain maximum\n    flexibility in our system design.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n    The principle of least commitment can be carried to even further extremes.\n    If we desire, we can maintain the ambiguity of representation even\n    ","tag":"#text"},{"tag":"EM","child":[{"body":"after","tag":"#text"}]},{"body":" we have designed the selectors and constructors, and elect\n    to use both Ben's representation ","tag":"#text"},{"tag":"EM","child":[{"body":"and","tag":"#text"}]},{"body":" Alyssa's\n    representation.  If both representations are included in a single system,\n    however, we will need some way to distinguish data in polar form from data\n    in rectangular form.  Otherwise, if we were asked, for instance, to find\n    the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"magnitude"},{"body":" of the pair\n    ","tag":"#text"},{"body":"$(3,4)$","tag":"LATEX"},{"body":", we wouldn't know whether to\n    answer 5 (interpreting the number in rectangular form) or\n    3 (interpreting the number in polar form). A straightforward way to\n    accomplish this distinction is to include a\n    ","tag":"#text"},{"tag":"EM","child":[{"body":"type tag","tag":"#text"}]},{"body":"—the\n    string ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"rectangular\""},{"body":"\n    or\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"polar\""},{"body":"—as\n      \n    part of each complex number.  Then when we need to manipulate a complex\n    number we can use the tag to decide which selector to apply.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p3","child":[{"body":"\n    In order to manipulate tagged data, we will assume that we have\n    functions","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"type_tag"},{"body":"\n    and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"contents"},{"body":" that extract from a data object\n    the tag and the actual contents (the polar or rectangular coordinates, in\n    the case of a complex number).  We will also postulate a\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"attach_tag"},{"body":"\n    that takes a tag and contents and produces a tagged data object.  A\n    straightforward way to implement this is to use ordinary list structure:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":0,"program":"chap=2&prgrm=PTAEGUEkGEAVQFLlAJgHQBY0oFA4GYCuAdgMYAuAlgPbGgCG559pAFgPrMDmAFOQJ4AHAKad6XADShStcsOLkAzgEpQAbxygtoAE7DyhHXUH1KOvkNHcpMhfKXKA3DgC+BEhRp0BIsbwAmjIQAtqoa2rr6hnSUiuwmZjyBBqGaEemgAPygrML0-klBqRnpAFygwjo61ObJIVIARABG+aDcXML+oHXBoAC0fW2Wfg1Oru5kVLTSsvaKhSlhaVp6BkagsfGmtUXKyyVZbaYANgshewfa5ZXVOymNLV3tnd1F-YO2cgqKo85uOLZFORQPh2ABGUAAXlAx1i5B4DQAgg0pBgxoDgcF+Ox8HoAI6EeSkbEQ6H7RjMNh+BG44QEonY2FAlEg8FjHA+KziHhYnH4wlkElOIA","body":"function attach_tag(type_tag, contents) {\n    return pair(type_tag, contents);\n}\nfunction type_tag(datum) {\n    return is_pair(datum)\n           ? head(datum)\n           : error(datum, \"bad tagged datum -- type_tag\");\n}\nfunction contents(datum) {\n    return is_pair(datum)\n           ? tail(datum)\n           : error(datum, \"bad tagged datum -- contents\");\n} "}]},{"tag":"TEXT","id":"#p4","child":[{"body":"\n\tUsing\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"type_tag"},{"body":",\n      \n    we can define predicates\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_rectangular"},{"body":"\n    and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_polar"},{"body":",\n    which recognize rectangular and polar numbers, respectively:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":2,"eval":false,"body":"function is_rectangular(z) {\n    return type_tag(z) === \"rectangular\";\n}\nfunction is_polar(z) {\n    return type_tag(z) === \"polar\";\n}"}]},{"tag":"TEXT","id":"#p5","child":[{"body":"\n    With type tags, Ben and Alyssa can now modify their code so that their two\n    different representations can coexist in the same system. Whenever Ben\n    constructs a complex number, he tags it as rectangular. Whenever Alyssa\n    constructs a complex number, she tags it as polar. In addition, Ben and\n    Alyssa must make sure that the names of their\n    functions\n    do not conflict.  One way to do this is for Ben to append the suffix\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"rectangular"},{"body":" to the name of each of his\n    representation\n    functions\n    and for Alyssa to append ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"polar"},{"body":" to the names of\n    hers. Here is Ben's revised rectangular representation from\n    section ","tag":"#text"},{"tag":"REF","body":"2.4.1","href":"/sicpjs/2.4.1"},{"body":":\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":19,"program":"chap=2&prgrm=PTAEGUEkGEAVQFLlAJgHQBY0oFA4GYCuAdgMYAuAlgPbGgCG559pAFgPrMDmAFOQJ4AHAKad6XADShStcsOLkAzgEpQAbxygtoAE7DyhHXUH1KOvkNHcpMhfKXKA3DgC+BEhRp0BIsbwAmjIQAtqoa2rr6hnSUiuwmZjyBBqGaEemgAPygrML0-klBqRnpAFygwjo61ObJIVIARABG+aDcXML+oHXBoAC0fW2Wfg1Oru5kVLTSsvaKhSlhaVp6BkagsfGmtUXKyyVZbaYANgshewfa5ZXVOymNLV3tnd1F-YO2cgqKo85uE55pooAI6Eeh6HgADyWEVW0VAkNAACoEX88ERJl5IvRjlsdOR2HoKPRiFxCMdwTwAF5hSJrOi5fLUpygf4YwExYLiPEEonMUnkyk09R0+HMSinGmOVnojxTOhcrjESgGfyiPkkskU8zC8LaOHrLnkDgg-E8EFgiF6HE8wnCYkC7XM1QAan2lwOFvBwh4lEVto1jqFyhDaPZ8oYpOO6vt-K1wfU+wNCsYHEYJN9-pM+LtDvjOuUEndHoy1tx2d5sc1goLYzc4axXIA1qJ8NVgnabX7uYH81CpPwYfqoutGMw2H4eA1ezWGlIEuZIQPQ+MG9Nm632+x-Zrc3GazwdFJ6EOViO6GOWBxuFOZ9q58WS+kF4fkaAjRwZPMT1IdG+P+wiiUMQPAniu-y2Io5CgE08hxDI7DECEoAALzvvQLbsG21AdjupJ7tWToAJBaI+T7pAAzGgAAMUjUWgADsYw4N2XABlWQbmJ8cw8LBxDwdQiHnE4QA","body":"function real_part_rectangular(z) { return head(z); }\n\nfunction imag_part_rectangular(z) { return tail(z); }\n\nfunction magnitude_rectangular(z) {\n    return math_sqrt(square(real_part_rectangular(z)) +\n                     square(imag_part_rectangular(z)));\n}\nfunction angle_rectangular(z) {\n    return math_atan(imag_part_rectangular(z),\n                     real_part_rectangular(z));\n}\nfunction make_from_real_imag_rectangular(x, y) {\n    return attach_tag(\"rectangular\", pair(x, y));\n}\nfunction make_from_mag_ang_rectangular(r, a) {\n    return attach_tag(\"rectangular\",\n                      pair(r * math_cos(a), r * math_sin(a)));\n} "},{"body":"\n    and here is Alyssa's revised polar representation:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":19,"program":"chap=2&prgrm=PTAEGUEkGEAVQFLlAJgHQBY0oFA4GYCuAdgMYAuAlgPbGgCG559pAFgPrMDmAFOQJ4AHAKad6XADShStcsOLkAzgEpQAbxygtoAE7DyhHXUH1KOvkNHcpMhfKXKA3DgC+BEhRp0BIsbwAmjIQAtqoa2rr6hnSUiuwmZjyBBqGaEemgAPygrML0-klBqRnpAFygwjo61ObJIVIARABG+aDcXML+oHXBoAC0fW2Wfg1Oru5kVLTSsvaKhSlhaVp6BkagsfGmtUXKyyVZbaYANgshewfa5ZXVOymNLV3tnd1F-YO2cgqKo85uE55pooAI6Eeh6HgADyWEVW0VAkNAACoEX88ERJl5IvRjlsdOR4tRjuCeAAvGHaOHrYLiYiUAz+USCIkk8nI0A08gcGTzejELjHJks8zksZuDGAmI0rh4gnM4kiikrKLU2n0wiMwkKsmqFGcjiKSjEHh8gVC7WitESqZ0aV0hnm1lhSJrOi5fI6xygf7WrGmwVap3qF3w5iUU7kr0+jw2jn0ADWonw1WC7D0OPYlGlgfMkKk-CVIfWjGYbD8PAa8vBDQk+0ulwS5n17BB+J4ILBEOhoAA1KAO+DhDwC8pa-Xxxlm4w+cOpNDlGKAbGaYn2MnqKns6aczwdFJ6IWqXQSywONwK1WdDXQI3d-uF2icLZFOQGMd+IpFPQ4jJ2MQQqAAC8caruum7iOw26XjwdYTvWADMaAAAxSEhaAAOxjDgWYQSY+I7p8cwmu+n7fuwv7-qEThAA","body":"function real_part_polar(z) {\n    return magnitude_polar(z) * math_cos(angle_polar(z));\n}\nfunction imag_part_polar(z) {\n    return magnitude_polar(z) * math_sin(angle_polar(z));\n}\nfunction magnitude_polar(z) { return head(z); }\n\nfunction angle_polar(z) { return tail(z); }\n\nfunction make_from_real_imag_polar(x, y) {\n    return attach_tag(\"polar\",\n                      pair(math_sqrt(square(x) + square(y)),\n                           math_atan(y, x)));\n}\nfunction make_from_mag_ang_polar(r, a) {\n    return attach_tag(\"polar\", pair(r, a));\n} "}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n    Each generic selector is implemented as a\n    function\n    that checks the tag of its argument and calls the appropriate\n    function\n    for handling data of that type.  For example, to obtain the real part of\n    a complex number,\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"real_part"},{"body":"\n    examines the tag to determine whether to use Ben's\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"real_part_rectangular"},{"body":"\n    or Alyssa's\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"real_part_polar"},{"body":".\n      \n    In either case, we use ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"contents"},{"body":" to extract the\n    bare, untagged datum and send this to the rectangular or polar\n    function\n    as required:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":65,"program":"chap=2&prgrm=PTAEGUEkGEAVQFLlAJgHQBY0oFA4GYCuAdgMYAuAlgPbGgCG559pAFgPrMDmAFOQJ4AHAKad6XADShStcsOLkAzgEpQAbxygtoAE7DyhHXUH1KOvkNHcpMhfKXKA3DgC+BEhRp0BIsbwAmjIQAtqoa2rr6hnSUiuwmZjyBBqGaEemgAPygrML0-klBqRnpAFygwjo61ObJIVIARABG+aDcXML+oHXBoAC0fW2Wfg1Oru5kVLTSsvaKhSlhaVp6BkagsfGmtUXKyyVZbaYANgshewfa5ZXVOymNLV3tnd1F-YO2cgqKo85uE55pps9BR6MQuIRjvRzAAvJYRVbRIa+bg8OGgAC8WNADRBzHBkOhDT+AKmMTigmoUNh8O0iPWPis4jRqixGJxlOpxPGpK8oEUAEdCNDhDwAB60lZRdZi0AAKlAYpJvOmenoxy2OnI7DxYIh1JZ6kiazouXyLMcoH+REmfMowXEmu1uoJBvRamNSOYlFOcMt1o8ZNADq4xEoBn8ohd+uhhvCdOldAd5A4gq1PEFwr0PDVGpMWp1wlBrtjcNUAGp9pcDpmRTx7Y7886i-iYzTlGM3DbAXQ9ccoy29YSaep9vSk4wOIwwfWQ07C8W2yyJFXqxlc-Po8OWZ2VROANaifDVYKF9XsBtcBet7diqT8SWe9aMZhsPw8XGDks6BpSBLmO9QAfXduyDB1D3YY9qFPOc9WvIcDR0KR6EfccGCYFgOFRT9F2HX9VzXdJ-xzeVg0ndgZHmFCpB0Ujk1TShiB4FCO2VUC+Q3Jt4ipUtUMTMjQ3DQhI24t1VAVeiKOoKjwX7UTeJAwM7TnLjOV40cEX4kMwwjUQ1JHCTyMURjmNkvSePbEl2OmbShJE-S4yfU08gKP0rTwazezM+SRw9NDvV9Jx3L3MiIKg08N0vHzxXvPiTXQ18sOZBp9Pwwjq2IyS03IDMhTrCVQHLfk8uzYCV3SirJOnJj+CkCVWPGTzQqPE92Fg8FoqQhg4qRF9MPfFKLN-UBiK6li2KU1U8jzaEcvdMd+OBL8lzhAiImyTjZvg78eE+OYdzWq4NgpCyWUOrQNum+cHL274DrXa4qhqNFGhIfdiGoAB3bxLHeSJzybX5GsmmIVNmuMFvipbcLE87DiiritwNW6lHu6tyk2BzVrXbIEa2m7Zjuss4ce24XpxN6Pu+5FhD+vGtSBrsQYEnThNFebNKhuIkd4uHsls3TtqXFH5mJh7jui7Hq358RWfs06RbRy5SeemFXuId6vp+kQ-oFtnGZCvt2Z69ZoZvWGcYYbyefMRWxfRiWsYuaWra4OSCbsImOxJionthdXNepxk-qNg2cFsRRyAYY5+EURR6DiGR2GIEJMWayDWvaq8HIASC0OGKq0ABmNAAAYpFLtAAHYxhwemcvVWP48T6hk-ORwgA","body":"function real_part(z) {\n    return is_rectangular(z)\n           ? real_part_rectangular(contents(z))\n           : is_polar(z)\n           ? real_part_polar(contents(z))\n           : error(z, \"unknown type -- real_part\");\n}\nfunction imag_part(z) {\n    return is_rectangular(z)\n           ? imag_part_rectangular(contents(z))\n           : is_polar(z)\n           ? imag_part_polar(contents(z))\n           : error(z, \"unknown type -- imag_part\");\n}\nfunction magnitude(z) {\n    return is_rectangular(z)\n           ? magnitude_rectangular(contents(z))\n           : is_polar(z)\n           ? magnitude_polar(contents(z))\n           : error(z, \"unknown type -- magnitude\");\n}\nfunction angle(z) {\n    return is_rectangular(z)\n           ? angle_rectangular(contents(z))\n           : is_polar(z)\n           ? angle_polar(contents(z))\n           : error(z, \"unknown type -- angle\");\n} "}]},{"tag":"TEXT","id":"#p7","child":[{"body":"\n    To implement the complex-number arithmetic operations, we can use the same\n    functions","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"add_complex"},{"body":",\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"sub_complex"},{"body":",\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"mul_complex"},{"body":",\n      \n    and\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"div_complex"},{"body":"\n    from section ","tag":"#text"},{"tag":"REF","body":"2.4.1","href":"/sicpjs/2.4.1"},{"body":",\n    because the selectors they call are generic, and so will work with either\n    representation.  For example, the\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"add_complex"},{"body":"\n    is still\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":6,"eval":false,"body":"function add_complex(z1, z2) {\n   return make_from_real_imag(real_part(z1) + real_part(z2),\n                              imag_part(z1) + imag_part(z2));\n}"}]},{"tag":"TEXT","id":"#p8","child":[{"body":"\n    Finally, we must choose whether to construct complex numbers using\n    Ben's representation or Alyssa's representation.  One\n    reasonable choice is to construct rectangular numbers whenever we have\n    real and imaginary parts and to construct polar numbers whenever we have\n    magnitudes and angles:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":7,"eval":true,"prependLength":94,"program":"chap=2&prgrm=PTAEGUEkGEAVQFLlAJgHQBY0oFA4GYCuAdgMYAuAlgPbGgCG559pAFgPrMDmAFOQJ4AHAKad6XADShStcsOLkAzgEpQAbxygtoAE7DyhHXUH1KOvkNHcpMhfKXKA3DgC+BEhRp0BIsbwAmjIQAtqoa2rr6hnSUiuwmZjyBBqGaEemgAPygrML0-klBqRnpAFygwjo61ObJIVIARABG+aDcXML+oHXBoAC0fW2Wfg1Oru5kVLTSsvaKhSlhaVp6BkagsfGmtUXKyyVZbaYANgshewfa5ZXVOymNLV3tnd1F-YO2cgqKo85uE55pps9BR6MQuIRjvRzAAvJYRVbRIa+bg8OGgAC8WNADRBzHBkOhDT+AKmMTigmoUNh8O0iPWPis4jRqixGJxlOpxPGpK8oEUAEdCNDhDwAB60lZRdZi0AAKlAYpJvOmenoxy2OnI7DxYIh1JZ6kiazouXyLMcoH+REmfMowXEmu1uoJBvRamNSOYlFOcMt1o8ZNADq4xEoBn8ohd+uhhvCdOldAd5A4gq1PEFwr0PDVGpMWp1wlBrtjcNUAGp9pcDpmRTx7Y7886i-iYzTlGM3DbAXQ9ccoy29YSaep9vSk4wOIwwfWQ07C8W2yyJFXqxlc-Po8OWZ2VROANaifDVYKF9XsBtcBet7diqT8SWe9aMZhsPw8XGDks6BpSBLmO9QAfXduyDB1D3YY9qFPOc9WvIcDR0KR6EfccGCYFgOFRT9F2HX9VzXdJ-xzeVg0ndgZHmFCpB0Ujk1TShiB4FCO2VUC+Q3Jt4ipUtUMTMjQ3DQhI24t1VAVeiKOoKjwX7UTeJAwM7TnLjOV40cEX4kMwwjUQ1JHCTyMURjmNkvSePbEl2OmbShJE-S4yfU08gKP0rTwazezM+SRw9NDvV9Jx3L3MiIKg08N0vHzxXvPiTXQ18sOZBp9Pwwjq2IyS03IDMhTrCVQHLfk8uzYCV3SirJOnJj+CkCVWPGTzQqPE92Fg8FoqQhg4qRF9MPfFKLN-UBiK6li2KU1U8jzaEcvdMd+OBL8lzhAiImyTjZvg78eE+OYdzWq4NgpCyWUOrQNum+cHL274DrXa4qhqNFGhIfdiGoAB3bxLHeSJzybX5GsmmIVNmuMFvipbcLE87DiiritwNW6lHu6tyk2BzVrXbIEa2m7Zjuss4ce24XpxN6Pu+5FhD+vGtSBrsQYEnThNFebNKhuIkd4uHsls3TtqXFH5mJh7jui7Hq358RWfs06RbRy5SeemFXuId6vp+kQ-oFtnGZCvt2Z69ZoZvWGcYYbyefMRWxfRiWsYuaWra4OSCbsImOxJionthdXNepxk-qNg2QvAlroLPDVLxioCTYPSOIquqKbbjh8rOZiPINa9reDGhPmpzqO8865DdxwWxFHIBhjn4RRFHoOIZHYYgQkxIvwrax09R4ABILQ4YqrQAGY0AABikce0AAdjGHB6Zy9V68b5vqFb85HCAA","body":"function make_from_real_imag(x, y) {\n    return make_from_real_imag_rectangular(x, y);\n}\nfunction make_from_mag_ang(r, a) {\n    return make_from_mag_ang_polar(r, a);\n} "}]},{"tag":"TEXT","id":"#p9","child":[{"tag":"FIGURE","scale":"60%","src":"img_javascript/ch2-Z-G-62.svg","id":"#fig-2.21","captionHref":"/sicpjs/2.4.2#fig-2.21","captionName":"Figure 2.21 ","captionBody":[{"body":"\n\t    Structure\n\t    \n\t    of the generic complex-arithmetic system.\n\t  ","tag":"#text"}]},{"body":"The resulting complex-number system has the structure shown in\n    \n\tfigure ","tag":"#text"},{"tag":"REF","body":"2.21","href":"/sicpjs/2.4.2#fig-2.21"},{"body":".\n      \n    The system has been decomposed into three relatively independent parts: the\n    complex-number-arithmetic operations, Alyssa's polar implementation,\n    and Ben's rectangular implementation.  The polar and rectangular\n    implementations could have been written by Ben and Alyssa working\n    separately, and both of these can be used as underlying representations by\n    a third programmer implementing the complex-arithmetic\n    functions\n    in terms of the abstract constructor/selector interface.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p10","child":[{"body":"\n    Since each data object is tagged with its type, the selectors operate on\n    the data in a\n    \n    generic manner.  That is, each selector is defined to have a\n    behavior that depends upon the particular type of data it is applied to.\n    Notice the general mechanism for interfacing the separate representations:\n    Within a given representation implementation (say, Alyssa's polar\n    package) a complex number is an untyped pair (magnitude, angle).  When a\n    generic selector operates on a number of ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"polar"},{"body":"\n    type, it strips off the tag and passes the contents on to Alyssa's\n    code.  Conversely, when Alyssa constructs a number for general use, she\n    tags it with a type so that it can be appropriately recognized by the\n    higher-level\n    functions.\n    This discipline of stripping off and attaching tags as data objects are\n    passed from level to level can be an important organizational strategy,\n    as we shall see in section ","tag":"#text"},{"tag":"REF","body":"2.5","href":"/sicpjs/2.5"},{"body":".\n    ","tag":"#text"}]}]