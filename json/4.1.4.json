[{"id":"/sicpjs/4.1.4","tag":"TITLE","body":"4.1.4  \n    Running the Evaluator as a Program"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    Given the evaluator, we have in our hands a description\n    (expressed in JavaScript)\n    of the process by which\n    JavaScript statements and expressions\n    are evaluated.  One advantage of expressing the evaluator as a program is\n    that we can run the program.  This gives us, running within\n    JavaScript,\n    a working model of how\n    JavaScript\n    itself evaluates expressions.  This can serve as a framework for\n    experimenting with evaluation rules, as we shall do later in this chapter.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n    Our evaluator program reduces expressions ultimately to the application of\n    \n    primitive\n    functions.\n    Therefore, all that we need to run the evaluator is to create a mechanism\n    that calls on the underlying\n    JavaScript\n    system to model the application of primitive\n    functions.","tag":"#text"}]},{"tag":"TEXT","id":"#p3","child":[{"body":"\n    There must be a binding for each primitive\n    function\n    name and operator, so that when\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    evaluates the\n    function expression\n    of an application of a primitive, it will find an\n    object to pass to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":".  We thus set up a \n    \n    global environment that associates unique objects with the names of the\n    primitive\n    functions and operators\n    that can appear in the expressions we will be evaluating.  \n    \n\tThe global environment also includes bindings for\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"undefined"},{"body":"\n\tand other names,\n      \n    so that they can be used as constants in expressions to be evaluated.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":75,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS0oFwAHuSyfLIAbra04s7CDACe4gBG1PwMilmslYqlrAxq2Vq6BkYmZnT8suwqhSXllUEhPcR9ysI1w3rtc6AA-KDWtsLirADWaviGrPkDZRVVoNMMGvWNzcRZGrPzBgBcoGMTB0NnoAA8z739p7f3dpLLiGQzUOwAInI1GooHWxCKoFYhnYhHycgYoAYhEkkkEvCeENAAGpQHdAYCGORDJRxpR8EU3kctKSIYoiaTyRT5lSaXSGVNamcAdyniCwZDobD8FwAO5IlFo5yY7G4-E8Qkksncim82nsemM4qHYZatmgDnanX3PX8xn-DRRWIEEgUGh0WSkfjUBj6pjZXLEdEiFo6DqmcxKGz8YQtCKgZ3xN1JfC2KlMHZ7Lix66tcNdTxcbw5m7x51iYhU0LNKTkIr+66B4OgQKgYiEfj8KIuhLuuGbba7fbG97VWqELgfbT5yMrOwjo5j-gTs5luKuxJ0TP5JgLyrCbdcPPGCN0Lw+Q+OhPr3spodqaYrg-34+dSNsSgxy9rnAVquSGlxEoKgsjUP82AxFtniEYRBCpYQIRIHguFTJweHNJCUNpXhzi5a18IMOCRAhSBiFQ4CinNUBSPIutcIIhj2iIhD1hUJhYEgKj+zYjj6MYxjmIhVjlCYABRLjuJE0S+P4gjBIAOVYeSJIMRT5JFWTrUdX9aH-QDgMoUCmHA1g5F3QYjhbcl1kkUQWwAPkLYtSHOZZ9JAsDdIg8hVx0ytyDcyggI84yvNM8gmEfScrPaGy7MCRzz2ED8Yxc1yAKCgyjJMjFtL8vTMpCpNN0xVtmLw6D4Ihc8JPPfCZKYmCoWjCSUvq+QKsEucJLndrOqaoiJKIvr7kEyx207c1xo7fhuQawimp4Rg8VYSjFCWhgVsRCl5v0QTxXBLiDsMLSOtGprhKYVhSgYNlLuuzFAV2yriOJFT9GEFJFCKIJHJSLVtuewSAFp3tAT7vt+0B-uB0BAbO+YQZIZE1oMf72gSgxYfRoGmoAKjBiG4ah-68bh-Rcaq4BCa+4mHOh0AwHh-qqoAUhpyH6f+1nydASniOCQIVKJn6uZbEIfoRuZBIAQmCYXadFzH-rl1tJZZ4jPg5unla+Ax1fOqrPiFxQ5hFkmvlbYmpcaqr7O1pW-tARz9ANxGmvsk35nNsXPdd-mEJlsGGYxl3QBltGNPabTwMC4LDO2Dd3XMk1Sus1hbPPRQMvjozivdXzY5zrLE9vYgmGoUoACsuAoNPYozg8SHprr3IT80kpSpviA0XubfaYuiqT3S8vzpJLEHhOM2H4hu9ackTwLSw2E4XgBBg+J2Un0CIW0xMZ7jkumCCvEuGDVhNznsNF8jTvoznq997LrFOkkBscjBIMCnn9ob49NIMjvybAUDOkgMjCG3qXZM5c9xVAqppHUkDQr+XCind4z0EEGFAeApBY9y6VxrnXRQ8DMGAiQTlCKUUzj91IQYFQNZJB1iAZ-YMe88Cx3oUwdg3oGj8GYXkZwUEmimDfgGFh39uycO4ZXWo-Cv5yAiEAA","body":"function setup_environment() {\n    return extend_environment(append(primitive_function_symbols,\n                                     primitive_constant_symbols),\n                              append(primitive_function_objects, \n                                     primitive_constant_values),\n                              the_empty_environment);\n} "},{"tag":"SNIPPET","latex":false,"id":2,"eval":true,"prependLength":83,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS0oFwAHuSyfLIAbra04s7CDACe4gBG1PwMilmslYqlrAxq2Vq6BkYmZnT8suwqhSXllUEhPcR9ysI1w3rtc6AA-KDWtsLirADWaviGrPkDZRVVoNMMGvWNzcRZGrPzBgBcoGMTB0NnoAA8z739p7f3dpLLiGQzUOwAInI1GooHWxCKoFYhnYhHycgYoAYhEkkkEvCeENAAGpQHdAYCGORDJRxpR8EU3kctKSIYoiaTyRT5lSaXSGVNamcAdyniCwZDobD8FwAO5IlFo5yY7G4-E8Qkksncim82nsemM4qHYZatmgDnanX3PX8xn-DRRWIEEgUGh0WSkfjUBj6pjZXLEdEiFo6DqmcxKGz8YQtCKgZ3xN1JfC2KlMHZ7Lix66tcNdTxcbw5m7x51iYhU0LNKTkIr+66B4OgQKgYiEfj8KIuhLuuGbba7fbG97VWqELgfbT5yMrOwjo5j-gTs5luKuxJ0TP5JgLyrCbdcPPGCN0Lw+Q+OhPr3spodqaYrg-34+dSNsSgxy9rnAVquSGlxEoKgsjUP82AxFtniEYRBCpYQIRIHguFTJweHNJCUNpXhzi5a18IMOCRAhSBiFQ4CinNUBSPIutcIIhj2iIhD1hUJhYEgKj+zYjj6MYxjmIhVjlCYABRLjuJE0S+P4gjBIAOVYeSJIMRT5JFWTrUdX9aH-QDgMoUCmHA1g5F3QYjhbcl1kkUQWwAPkLYtSHOZZ9JAsDdIg8hVx0ytyDcyggI84yvNM8gmEfScrPaGy7MCRzz2ED8Yxc1yAKCgyjJMjFtL8vTMpCpNN0xVtmLw6D4Ihc8JPPfCZKYmCoWjCSUvq+QKsEucJLndrOqaoiJKIvr7kEyx207c1xo7fhuQawimp4Rg8VYSjFCWhgVsRCl5v0QTxXBLiDsMLSOtGprhKYVhSgYNlLuuzFAV2yriOJFT9GEFJFCKIJHJSLVtuewSAFp3tAT7vt+0B-uB0BAbO+YQZIZE1oMf72gSgxYfRoGmoAKjBiG4ah-68bh-Rcaq4BCa+4mHOh0AwHh-qqoAUhpyH6f+1nydASniOCQIVKJn6uZbEIfoRuZBIAQmCYXadFzH-rl1tJZZ4jPg5unla+Ax1fOqrPiFxQ5hFkmvlbYmpcaqr7O1pW-tARz9ANxGmvsk35nNsXPdd-mEJlsGGYxl3QBltGNPabTwMC4LDO2Dd3XMk1Sus1hbPPRQMvjozivdXzY5zrLE9vYgmGoUoACsuAoNPYozg8SHprr3IT80kpSpviA0XubfaYuiqT3S8vzpJLEHhOM2H4hu9ackTwLSw2E4XgBBg+J2Un0CIW0xMZ7jkumCCvEuGDVhNznsNF8jTvoznq997LrFOkkBscjBIMCnn9ob49NIMjvybAUDOkgMjCG3qXZM5c9xVAqppHUkDQr+XCind4z0EEGFAeApBY9y6VxrnXRQ8DMGAiQTlCKUUzj91IQYFQNZJB1iAZ-YMe88Cx3oUwdg3oGj8GYXkZwUEmimDfgGFh39uycO4ZXWo-Cv5yAiEAA","body":"const the_global_environment = setup_environment(); "}]},{"tag":"TEXT","id":"#p4","child":[{"body":"\n\tIt does not matter how we represent primitive function objects, so long\n\tas ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" can identify and apply them using\n\tthe functions ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_primitive_function"},{"body":"\n\tand ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply_primitive_function"},{"body":".  We\n\thave chosen to represent a primitive function as a list beginning with\n\tthe string ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"primitive\""},{"body":" and\n\tcontaining a function in the underlying JavaScript that implements that\n\tprimitive.\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":5,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS09MyShpTilFQAbmrxFDTEwvFaugZGJmYWzGycvAJCRSSKAESp6ZmUOc0aUbEEJPlJbRnZaumS-FzizqyJhcU65abmnlzewmyU-I3EGj2gfWLEDOSg4gCeVmkjnWoThAyggXoGgifCrdcdXYrCAB6Kc5BAB8oD+oAA1KBzqAejgeIwJqxzsJLMNvrkBnNhBcru1RlZ+A89lEEQwkSj0QTxpNpnJZgUcZcqbdCcSekA","body":"function is_primitive_function(fun) {\n    return is_tagged_list(fun, \"primitive\");\n}\n\nfunction primitive_implementation(fun) { return head(tail(fun)); } "}]},{"tag":"TEXT","id":"#p5","child":[{"body":"The function\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"setup_environment"},{"body":"\n    will get the primitive names and implementation \n    functions\n    from a list:","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-1","body":"1","href":"/sicpjs/4.1.4#footnote-1"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nconst primitive_functions = list(list(\"head\",    head             ),\n                                 list(\"tail\",    tail             ),\n                                 list(\"pair\",    pair             ),\n                                 list(\"is_null\", is_null          ),\n                                 list(\"+\",       (x, y) => x + y  ),\n                                 $\\langle{}$more primitive functions$\\rangle$\n                                );\n\n\nconst primitive_function_symbols =\n    map(f => head(f), primitive_functions);\n\n\nconst primitive_function_objects =\n    map(f => list(\"primitive\", head(tail(f))),\n        primitive_functions);\n      "}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n\tSimilar to primitive functions, we define other primitive constants that are\n\tinstalled in the global environment by the function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"setup_environment"},{"body":".\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nconst primitive_constants = list(list(\"undefined\", undefined),\n                                 list(\"math_PI\",   math_PI)\n                                 $\\langle{}$more primitive constants$\\rangle$\n                                );\n\n\t\t\t\t \nconst primitive_constant_symbols =\n    map(c => head(c), primitive_constants);\n\n\nconst primitive_constant_values =\n    map(c => head(tail(c)), primitive_constants);\n\t  "}]},{"tag":"TEXT","id":"#p7","child":[{"body":"\n    To apply a \n    primitive function,\n    we simply apply the implementation\n    function\n    to the arguments, using the underlying\n    JavaScript\n    system:","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-2","body":"2","href":"/sicpjs/4.1.4#footnote-2"},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":16,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS09MyShpTilFQAbmrxFDTEwvFaugZGJmYWzGycvAJCRSSKAESp6ZmUOc0aUbEEJPlJbRnZaumS-FzizqyJhcU65abmnlzewmyU-I3EGj2gfWLEDOSg4gCeVmkjnWoThAyggXoGgifCrdcdXYrCAB6Kc5BAB8oD+oAA1KBzqAejgeIwJqxzsJLMNvrkBnNhBcru1RlZ+A89lEEQwkSj0QTxpNpnJZgUcZcqbdCcS4f0EgVQKxJBNmV8CXlsfFFKxDOw3i4dC99MZlnRefymJRiEwSDwuIZ+OdVewmAArVhZVgMUhpSQiWVlG0GFk5FVSWkzEUkDRiiVSuF9JU6vE3B3Cxm4+13IkMRRS4QYRQAJhJQA","body":"function apply_primitive_function(fun, arglist) {\n    return apply_in_underlying_javascript(\n               primitive_implementation(fun), arglist);\n} "}]},{"tag":"TEXT","id":"#p8","child":[{"body":"\n\tFor convenience in running the metacircular evaluator, we provide a\n\t","tag":"#text"},{"tag":"EM","child":[{"body":"driver loop","tag":"#text"}]},{"body":" that models the read-evaluate-print loop of \n\tthe underlying JavaScript system. It prints a \n\t","tag":"#text"},{"tag":"EM","child":[{"body":"prompt","tag":"#text"}]},{"body":" and reads an input program as a string.\n\tIt transforms the program string\n\tinto a tagged-list representation of the statement as described in\n\tsection ","tag":"#text"},{"tag":"REF","body":"4.1.2","href":"/sicpjs/4.1.2"},{"body":"—a\n\tprocess called parsing and accomplished by the primitive function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"parse"},{"body":".\n\tWe precede each printed result by\n\tan ","tag":"#text"},{"tag":"EM","child":[{"body":"output prompt","tag":"#text"}]},{"body":" so as to distinguish the value of the\n\tprogram from other output that may be printed. The driver loop gets\n\tthe program environment of the previous program as argument.\n\tAs described at the end of section ","tag":"#text"},{"tag":"REF","body":"3.2.4","href":"/sicpjs/3.2.4"},{"body":", the\n\tdriver loop treats the program as if it were in a block: it\n\tscans out the declarations, extends the given environment by a frame\n\tcontaining a binding of each name to\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"*unassigned*\""},{"body":", and evaluates\n\tthe program with respect to the extended environment, which\n\tis then passed as argument to the next iteration of the driver loop.\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":480,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqSlbdpzk2DgIgoitbmEj7WfiGqLQEKsObwjn4o7Xf2s7j4dnsCT2ZkmobC4z4us9+0Qg5kgVQfTzOdZbquHMTlz24+UP80t4tFFuJvo9163y7Z14++2t3eP4oQVlABglhXWhSY-I8oJWWs4SSYPCecDWi0zY+OdAHZyHIYg2DC6ldk0cVGuawJSDC6QP8-ixwbWy3t0XekETzQj-v-QIF8My+3XEfJ4Ok-wzDAUBVC84vgblQUSX0nQvysxvukb+0hpDK1XoJNWSo+ztiIkDIeoBU6gASrnahZR4q0GjN+KujDWxLADLnTekht6gM-AfaEigErdRTtCCKZAEL3CQhtJg0VMG-CcHIzCG1nRthkHZCYI8jjXgSkjDK3k2q5RQrw3RkCoH-w0Qol2gMaq2I+OzMhH1VE-XsdQRR4prZ+iaFJU+vUDKAI6P6GGoBiIACpvG+OicRXQ4TAko3IUSdCk0S5+3yjhfW9DQY2jtE4OurQlAF0mlcY0ppuSsxsS41xrxUnvVVuheRPi8oblya8YOjCc7RQLm0pC64W5GkhKeHGfJ6kWCFFXQZK5knNHrnM4ZCzFagCGvHEGIT7BDTIc0teIh0bYPGcfPG9C5m4P9C3Aqkxjl3lWbUvOkwC53MGqU0ZJooTAQmfPQwdTzAzP8I7CUq11quzegQTSTBCCsA4FAOAiBkDoCwAAJjSevImkgQQgg2i4L6tDyb2krCCe25gz7ukkDlb8oAABkNLQBk1EJIPxrMoqRWioSp8WK9kfRmGEOk+CQLBInPYTF2LcWYNocRflHhpBPRXh4twArrmsuMAEfR2yGVMr8ZWaggqflNI+oU+0MrPBDVJSFEVn1viKGlUq2ViT1mlMNS0mY-Qr5PGFX1MVOLvKSpwsRd18qVYHPsMavoXp-F4ItaDSVgavSOoWS60NG8AnNB+u66l+TNWMuZYoXV+rr7JoofBTCKFVUaqtT6iV+KA3LMSMG-ZJb63vgeUK7NVrc06spV+Lt+ae3fh0qkj6Lbs7vMqWMmp7bK19T7QW-terB3FvSSg0R4DvnXy9QZatfra1nhIqnIRPxXkcVAAAHzPY2HdeKbUBqkKZSQLZ7QnqMBeq9zhiW+pvZ0-dUS4ovp5S015lymhZpnQZBZajM1zoHQQ4dQG11ARGROz5JzPUdtndqhdX551wcAym8Nh73yvMUO63QQ0PnVNIDGzVcaiPHsQ0SR1ZGnXTRQ1R5dGLnDhn1IadjXywNbKrR+rFX7-W-ula6PjEJUP0EbR4qTFKyrehxAshBcot1hrmFGq5GavS6Bg4uvDCqWk8cjBwmM06hOYbzfO3DIEdL4ZLeGsz0mqkCdKl6CquhJGaetRuSTEY3OTtII6zz5UMSA0kU5ldzh-2MbQxp4wABIdV1nt0ifFbu29En4v73XfJlpeXAI4MzRW9L9hVFWEILQjA8GU3FbESucLKn1MbD81V1atCUX1ZLY19d7DOHlYJrRr6xSus4QAMy9fScVp8tAxRR2I5+QTI2rWEZkUeveJWHjOMuqG7bTWI0DFqXtlzin+O7c-v1pDLWKqKz2wEG7OCEpLpi1x8bIq4FCx+Qbcln6a05YmSRTJlZS5aEKymipMmqOrctTZ7tRmHPvZEDMHmdNsabowxlrlWXv1SvR6qZol25OvsvQKa94ngdRMJ3zb7EOZvr1p9LEyG1qDMw9UlwosaxvVdq4zkQzP6aLctj+37Q8ec+z5zhHr7iWlC4iLLDE8tOftYl6NqXE3f3TZR6K8+Y8tY61Jf90TgONwBxIjA4skOS1W-tFk+Bs8jcmAsNznNWH50B0cyZhrRd6fm7nn993ebY4C-sJPf3gJQ9B6tZ7uecuU0mzNsZO3TvA4x+9ZkH+ae9F8V5dxhCU9wcB9tsbzVbrs9x9L5x1HzhWFw-hzjgH2WxenKiawm36TWGDcs+L8D9hDOFsQQn5ztp7T14d2r-v-nbUd6SWD7JSRdc6lpJiBkeICRoNVal13FWdRyOYMZVf9IcQb5ZFO37b6Kd1834f7o6I1+n6ZJv6CIER+xfUVkO-x+sRP4aC-xLNXHfcwafSnPdanUiL-I-B-E-Rkf-c-ULMPZsW-aAukX-OA5kLfdtYAp5NbTPXHMTcAtvYiTA7-GA9As-ICTvdeH-BkNtPvPfTrGrHCOrd-deLub6GAiUBvSXH4aXX9WXH3W3Q8SWe-Okbg4bMlDXPgrXanHXFeJtdJcNYSdnNBVqGHL5cSUER+RISjL5IJbHSrfFYiFQ5mFYRJR7dQ9zFYLQkEHQ98EnRgGvewWgv-TAnBNkUwrAhgiwRhVw3OVwkDIfOUKuclA-VAx-DAgAi-a+NCZQjkVQp0cNTNVw5KKZAISVDgsQjwCQhzQhMGMfdkBYRIh4ZIyNVI-5FxTIv3Y-XIn5So9IjeEQzKWollPI5fGYLw1-HwxvPXAgs3KVLo8wpAqwkLOHUGQfQdNgoSUEPQw+cY4PRHHDWDdohQyFVWaFWFTgBFHgZFNASbdFWvJ8EmcmfYS4GjYTdhJoJlVYc43ArYEIS4P8Q6QiS4EiRoa4oRMQa4Q8BQd+EKYsagdScUago4wgXRM46SXo0AAAQh1GJlJgpkUHOM4lABDVHyKU0kUDu0ix8wszOWnzo28C8h8lDTC09AiwzjxOjHjjz1dQ8mJMyixMIAuPwOb3x0IAPUZO8k0lBPsBKgpNaxvChN4PGxq05NAFYLRMOP5NVh72FJd1FL5wlNl2lMUPYLlPMQ6hnBZMVOkLFJvF0B1zVKNUKJKWiC8C0Cn0YOMPNLaEdRfFmiQNrm2WuXNT8zAJtQ2SiTtNED5N6JGUdJnHdMMK1VswHXNWcL0CPFoHuFIDBC1I6QOG6TVVBnnRmRNKKz9xhUjTyWhL7QzLekYU5VNlUHNkTPXFzmIVIRlIKMxOUx00CXI1KQMOhI9CpTU2bOiDskzIa2UyCMqmUxFMWJvCHNRPRNm37KGkHK9GHNjwHRzJyC4l7JLXSjfiynEHaiTM7NYyiwQntDyUJM0BBHJkbIDCMHZRUWPNPKiCkjQnbMInDUXPaDTUBlvJ-HqH3I3PyOkGvLJjPKCQAB5Qg-zFB3y0IXjbUsRaACjSAagbI7D4EN5KhiiNp0hiJQAABqe42qb4UyeMuSfYNTIwbCx1DC7Cx7CwPCgkEEQisC3RJBPCZgAiKC0oIgUQSiBC+w3WZChItCqJLCnCoqaigiwgIi18kiqJEiQSyi8wES2isS+i88qM1scoSoII65BZAkp7FpMYFwUoCGQ8yYD6QRVYHc985OB2cvLPEhACm+SYCkfQfStEZMmMuMhM7KCxGcdmWSpsBZNlaKPtYi3ykIPtcCz+dIUy7DOy3Qedd8qRIoPiSYT2MYAK0AEs5PDcrc9cC1Z5Zio6LSqJMgRoLyUAINBKlId2JOehQKGRFgL0XOLI585MwwReFIUGKK58gc0c2c3QLq6cnqpciqwIJKpePfPS1SwyheBQkdTCDS+uQqqIbSlqXSpyyalq3KlalNKK8yhiyy9q6yvobPYKz+Ry8QZyqatymirKry-KHyiK1NPBNKoKiSkKpon4MK6xVjeypaDeLeaK4i2KiMhi4a-uS0FK-QNKjKss4yCs60gUSCwqyAkqiUMqhq5iQyMtBtUG7aAefawIRhZ8xq7MhswFUMDq-6rqtTQa1uPqqclsmm73SYUal6afCagyjavZdY0NTY9gbY7gJFPgXAdUo45SVSGgdSUkihY6ajD0zLQgm1ayYiMW8yRtEW+wFWiW+0FSBYRfNQpKPUztD3BcpKZcosuqzWoEiyHm3OSVfkONLtR1CwLtFKNIwIONAtJ28wAtV2-5ONB8r20AB832+24wzBQOzBEOooONCvEhR1WO6QD4N2jI4wyUBgBYSQGoR1NOjO+CrYZOiwONF4r2l40MAu8wONG0cmWYeoBgRJKusmGupgSYcumfYiTCwOiwZE3QGoC82GBibCvO1uuNRiTu8wbu0AXuyJBiFiIev24wxicIr2hiAISKWGcwFiFe4e4whJXQFICeqete0ABiaJSe8wbem1YiYAMehSN4yevu4+0AMAOe0Oy+gAUhvoPofoYjfrPtAAvoC0vM7q-unrSt7vnsvphPZWAbvsPv7thPZXvogYC0As-tge-tAGAvMHAdfpQcijHpAaPoYkAuiiQdwdtWhjQZ7owfXrIejuMOhnwb3oCEIfgcYewYAdtRhJvsftXtobhPMHOP5G6kYUtslrijUyigmEAS7V0DEetooT0VEdMnFqtqlpwVoHqAACtfjlFpHtNBBIl-aVHVaDNjbF0upKj5H1HD5uocBlGzItbFs3weKVF8U40nYwVHVPGXZW70i41IBSBnY3As697Angmbo-GplK75BG7YBIAvaG6nB4mon6kYnq6ABRQOpJjJ1Jqo4wgAOUkAKZvqKYKZ+s-hEYtpMacfowHKkYCEAXIEiT7XIB-GsfoyUeqccbUbqenIaYAW02aaPsmLafaZqd6c2xrDsZHQ5GMmseZJOgQswVZIMiMicAJE-wPGYBEmuq0ckCkE3lMjLJuVSmsZ1t-PXH1uo1sJWeX2TBsCqDhvylWbVkuFMRuu1Pylfm4IWblM7N8uag6ameLgkoaKgR+b8T+YO00Z0aoCcUaI+GBdfC22nLyc-mhvLM8q+aXwUOLMZScBBFbE-OJ2xY6QEV6iebJZQhmZaWIGTBxGUnyhuDUCbnwpBF0Fhd+ItQ+jZHkppG0e5fxvJU8iZNVgFbhbGlShCGIkAtFfFEYk0kob21FGhelq5aoAqdviiUAvkcVdVmVaKlVcpUIg1alZShlYAG1yL0qFt+W+0zWg5SKSJAXBK+XiYaLorHXJLiIABdYiFVjeD10S-YR1quFm0AHOl0fYYiZiON+NhNxNpN0e8F8wFls2CsdlwS4iAAHVCzdbteDZBAlaFdIrzbVo+npZ9CsDzXTbLMzZoteaDthRObrbZcbb2UYQJFUF3jbdzmIgAFlGIw4HBSAe3KB0LuI-DSZx2TJWX+2h2R2hpJ3azxRTJ1IcR1qjLfC6ru3SZc4q2cQa2-E92fg23hqa4bKvxT225LQo3M7bU424ZsR0qMRVJCQNp7oU2ol5V+5dpqq73HBc7H3k3QOwOLDapT252zZs3y3BLT3YPEC2qGFqnaAQQypc5SpkxFIx3SYcbzAeEdF+FopTKQEGN8sgJAQWX0Psh8OUPXxQA4lHFbaxsvEshNE-ErFzzkPlG0OyoNzc41zMpnmNxXWBQuPAYmOlFNkihp3KBx3BP-hqRqOyo5HWAaO2BvzkPD2TICQNwd55Pe2W2hwDPx26PQY12rbN2OaVPsgtPl4+JiJypJByAcoH5jxn3mAShmUNpiJuIcBLON2Lr80CWiXNGIgROuIgA","body":"const input_prompt = \"M-evaluate input: \";\nconst output_prompt = \"M-evaluate value: \";\n\nfunction driver_loop(env) {\n   const input = user_read(input_prompt);\n   if (is_null(input)) {\n       display(\"evaluator terminated\");\n   } else {\n       const program = parse(input);\n       const locals = scan_out_declarations(program);\n       const unassigneds = list_of_unassigned(locals);\n       const program_env = extend_environment(locals, unassigneds, env);\n       const output = evaluate(program, program_env);\n       user_print(output_prompt, output);\n       return driver_loop(program_env);\n   }\n} "},{"body":"\n\tWe use JavaScript's ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"prompt"},{"body":" function\n\tto request and read the input string from the user:\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":6,"eval":true,"prependLength":0,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiEDOApgE4D6LTAhgCYAUABxbUAtgPJsG5FpWIBzAJSgA3jlDrQncoRZ0ho8YOFiJUmfIUBuHAF8gA","body":"function user_read(prompt_string) {\n    return prompt(prompt_string);\n} "},{"body":"\n    The function\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"prompt"},{"body":" returns\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"null"},{"body":" when the user cancels the\n    input. We use a special printing\n    function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"user_print"},{"body":",\n      \n    to avoid printing the environment part of a compound\n    function,\n    which may be a very long list (or may even contain cycles).\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":7,"eval":true,"prependLength":461,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqSlbdpzk2DgIgoitbmEj7WfiGqLQEKsObwjn4o7Xf2s7j4dnsCT2ZkmobC4z4us9+0Qg5kgVQfTzOdZbquHMTlz24+UP80t4tFFuJvo9163y7Z14++2t3eP4oQVlABglhXWhSY-I8oJWWs4SSYPCecDWi0zY+OdAHZyHIYg2DC6ldk0cVGuawJSDC6QP8-ixwbWy3t0XekETzQj-v-QIF8My+3XEfJ4Ok-wzDAUBVC84vgblQUSX0nQvysxvukb+0hpDK1XoJNWSo+ztiIkDIeoBU6gASrnahZR4q0GjN+KujDWxLADLnTekht6gM-AfaEigErdRTtCCKZAEL3CQhtJg0VMG-CcHIzCG1nRthkHZCYI8jjXgSkjDK3k2q5RQrw3RkCoH-w0Qol2gMaq2I+OzMhH1VE-XsdQRR4prZ+iaFJU+vUDKAI6P6GGoBiIACpvG+OicRXQ4TAko3IUSdCk0S5+3yjhfW9DQY2jtE4OurQlAF0mlcY0ppuSsxsS41xrxUnvVVuheRPi8oblya8YOjCc7RQLm0pC64W5GkhKeHGfJ6kWCFFXQZK5knNHrnM4ZCzFagCGvHEGIT7BDTIc0teIh0bYPGcfPG9C5m4P9C3Aqkxjl3lWbUvOkwC53MGqU0ZJooTAQmfPQwdTzAzP8I7CUq11quzegQTSTBCCsA4FAOAiBkDoCwAAJjSevImkgQQgg2i4L6tDyb2krCCe25gz7ukkDlb8oAABkNLQBk1EJIPxrMoqRWioSp8WK9kfRmGEOk+CQLBInPYTF2LcWYNocRflHhpBPRXh4twArrmsuMAEfR2yGVMr8ZWaggqflNI+oU+0MrPBDVJSFEVn1viKGlUq2ViT1mlMNS0mY-Qr5PGFX1MVOLvKSpwsRd18qVYHPsMavoXp-F4ItaDSVgavSOoWS60NG8AnNB+u66l+TNWMuZYoXV+rr7JoofBTCKFVUaqtT6iV+KA3LMSMG-ZJb63vgeUK7NVrc06spV+Lt+ae3fh0qkj6Lbs7vMqWMmp7bK19T7QW-terB3FvSSg0R4DvnXy9QZatfra1nhIqnIRPxXkcVAAAHzPY2HdeKbUBqkKZSQLZ7QnqMBeq9zhiW+pvZ0-dUS4ovp5S015lymhZpnQZBZajM1zoHQQ4dQG11ARGROz5JzPUdtndqhdX551wcAym8Nh73yvMUO63QQ0PnVNIDGzVcaiPHsQ0SR1ZGnXTRQ1R5dGLnDhn1IadjXywNbKrR+rFX7-W-ula6PjEJUP0EbR4qTFKyrehxAshBcot1hrmFGq5GavS6Bg4uvDCqWk8cjBwmM06hOYbzfO3DIEdL4ZLeGsz0mqkCdKl6CquhJGaetRuSTEY3OTtII6zz5UMSA0kU5ldzh-2MbQxp4wABIdV1nt0ifFbu29En4v73XfJlpeXAI4MzRW9L9hVFWEILQjA8GU3FbESucLKn1MbD81V1atCUX1ZLY19d7DOHlYJrRr6xSus4QAMy9fScVp8tAxRR2I5+QTI2rWEZkUeveJWHjOMuqG7bTWI0DFqXtlzin+O7c-v1pDLWKqKz2wEG7OCEpLpi1x8bIq4FCx+Qbcln6a05YmSRTJlZS5aEKymipMmqOrctTZ7tRmHPvZEDMHmdNsabowxlrlWXv1SvR6qZol25OvsvQKa94ngdRMJ3zb7EOZvr1p9LEyG1qDMw9UlwosaxvVdq4zkQzP6aLctj+37Q8ec+z5zhHr7iWlC4iLLDE8tOftYl6NqXE3f3TZR6K8+Y8tY61Jf90TgONwBxIjA4skOS1W-tFk+Bs8jcmAsNznNWH50B0cyZhrRd6fm7nn993ebY4C-sJPf3gJQ9B6tZ7uecuU0mzNsZO3TvA4x+9ZkH+ae9F8V5dxhCU9wcB9tsbzVbrs9x9L5x1HzhWFw-hzjgH2WxenKiawm36TWGDcs+L8D9hDOFsQQn5ztp7T14d2r-v-nbUd6SWD7JSRdc6lpJiBkeICRoNVal13FWdRyOYMZVf9IcQb5ZFO37b6Kd1834f7o6I1+n6ZJv6CIER+xfUVkO-x+sRP4aC-xLNXHfcwafSnPdanUiL-I-B-E-Rkf-c-ULMPZsW-aAukX-OA5kLfdtYAp5NbTPXHMTcAtvYiTA7-GA9As-ICTvdeH-BkNtPvPfTrGrHCOrd-deLub6GAiUBvSXH4aXX9WXH3W3Q8SWe-Okbg4bMlDXPgrXanHXFeJtdJcNYSdnNBVqGHL5cSUER+RISjL5IJbHSrfFYiFQ5mFYRJR7dQ9zFYLQkEHQ98EnRgGvewWgv-TAnBNkUwrAhgiwRhVw3OVwkDIfOUKuclA-VAx-DAgAi-a+NCZQjkVQp0cNTNVw5KKZAISVDgsQjwCQhzQhMGMfdkBYRIh4ZIyNVI-5FxTIv3Y-XIn5So9IjeEQzKWollPI5fGYLw1-HwxvPXAgs3KVLo8wpAqwkLOHUGQfQdNgoSUEPQw+cY4PRHHDWDdohQyFVWaFWFTgBFHgZFNASbdFWvJ8EmcmfYS4GjYTdhJoJlVYc43ArYEIS4P8Q6QiS4EiRoa4oRMQa4Q8BQd+EKYsagdScUago4wgXRM46SXo0AAAQh1GJlJgpkUHOM4lABDVHyKU0kUDu0ix8wszOWnzo28C8h8lDTC09AiwzjxOjHjjz1dQ8mJMyixMIAuPwOb3x0IAPUZO8k0lBPsBKgpNaxvChN4PGxq05NAFYLRMOP5NVh72FJd1FL5wlNl2lMUPYLlPMQ6hnBZMVOkLFJvF0B1zVKNUKJKWiC8C0Cn0YOMPNLaEdRfFmiQNrm2WuXNT8zAJtQ2SiTtNED5N6JGUdJnHdMMK1VswHXNWcL0CPFoHuFIDBC1I6QOG6TVVBnnRmRNKKz9xhUjTyWhL7QzLekYU5VNlUHNkTPXFzmIVIRlIKMxOUx00CXI1KQMOhI9CpTU2bOiDskzIa2UyCMqmUxFMWJvCHNRPRNm37KGkHK9GHNjwHRzJyC4l7JLXSjfiynEHaiTM7NYyiwQntDyUJM0BBHJkbIDCMHZRUWPNPKiCkjQnbMInDUXPaDTUBlvJ-HqH3I3PyOkGvLJjPKCQAB5Qg-zFB3y0IXjbUsRaACjSAagbI7D4EN5KhiiNp0hiJQAABqe42qb4UyeMuSfYNTIwbCx1DC7Cx7CwPCgkEEQisC3RJBPCZgAiKC0oIgUQSiBC+w3WZChItCqJLCnCoqaigiwgIi18kiqJEiQSyi8wES2isS+i88qM1scoSoII65BZAkp7FpMYFwUoCGQ8yYD6QRVYHc985OB2cvLPEhACm+SYCkfQfStEZMmMuMhM7KCxGcdmWSpsBZNlaKPtYi3ykIPtcCz+dIUy7DOy3Qedd8qRIoPiSYT2MYAK0AEs5PDcrc9cC1Z5Zio6LSqJMgRoLyUAINBKlId2JOehQKGRFgL0XOLI585MwwReFIUGKK58gc0c2c3QLq6cnqpciqwIJKpePfPS1SwyheBQkdTCDS+uQqqIbSlqXSpyyalq3KlalNKK8yhiyy9q6yvobPYKz+Ry8QZyqatymirKry-KHyiK1NPBNKoKiSkKpon4MK6xVjeypaDeLeaK4i2KiMhi4a-uS0FK-QNKjKss4yCs60gUSCwqyAkqiUMqhq5iQyMtBtUG7aAefawIRhZ8xq7MhswFUMDq-6rqtTQa1uPqqclsmm73SYUal6afCagyjavZdY0NTY9gbY7gJFPgXAdUo45SVSGgdSUkihY6ajD0zLQgm1ayYiMW8yRtEW+wFWiW+0FSBYRfNQpKPUztD3BcpKZcosuqzWoEiyHm3OSVfkONLtR1CwLtFKNIwIONAtJ28wAtV2-5ONB8r20AB832+24wzBQOzBEOooONCvEhR1WO6QD4N2jI4wyUBgBYSQGoR1NOjO+CrYZOiwONF4r2l40MAu8wONG0cmWYeoBgRJKusmGupgSYcumfYiTCwOiwZE3QGoC82GBibCvO1uuNRiTu8wbu0AXuyJBiFiIev24wxicIr2hiAISKWGcwFiFe4e4whJXQFICeqete0ABiaJSe8wbem1YiYAMehSN4yevu4+0AMAOe0Oy+gAUhvoPofoYjfrPtAAvoC0vM7q-unrSt7vnsvphPZWAbvsPv7thPZXvogYC0As-tge-tAGAvMHAdfpQcijHpAaPoYkAuiiQdwdtWhjQZ7owfXrIejuMOhnwb3oCEIfgcYewYAdtRhJvsftXtobhPMHOP5G6kYUtslrijUyigmEAS7V0DEetooT0VEdMnFqtqlpwVoHqAACtfjlFpHtNBBIl-aVHVaDNjbF0upKj5H1HD5uocBlGzItbFs3weKVF8U40nYwVHVPGXZW70i41IBSBnY3As697Angmbo-GplK75BG7YBIAvaG6nB4mon6kYnq6ABRQOpJjJ1Jqo4wgAOUkAKZvqKYKZ+s-hEYtpMacfowHKkYCEAXIEiT7XIB-GsfoyUeqccbUbqenIaYAW02aaPsmLafaZqd6c2xrDsZHQ5GMmseZJOgQswVZIMiMicAJE-wPGYBEmuq0ckCkE3lMjLJuVSmsZ1t-PXH1uo1sJWeX2TBsCqDhvylWbVkuFMRuu1Pylfm4IWblM7N8uag6ameLgkoaKgR+b8T+YO00Z0aoCcUaI+GBdfC22nLyc-mhvLM8q+aXwUOLMZScBBFbE-OJ2xY6QEV6iebJZQhmZaWIGTBxGUnyhuDUCbnwpBF0Fhd+ItQ+jZHkppG0e5fxvJU8iZNVgFbhbGlShCGIkAtFfFEYk0kob21FGhelq5aoAqdviiUAvkcVdVmVaKlVcpUIg1alZShlYAG1yL0qFt+W+0zWg5SKSJAXBK+XiYaLorHXJLiIABdYiFVjeD10S-YR1quFm0AHOl0fYYiZiON+NhNxNpN0e8F8wFls2CsdlwS4iAAHVCzdbteDZBAlaFdIrzbVvpZ9CZYCx3koFUFJnQt0EbALlKmTFtQwEEpRU4g4lTa2E5SJc0YiGeaSC4iAA","body":"function user_print(string, object) {\n    function prepare(object) {\n        return is_compound_function(object)\n               ? \"< compound-function >\"\n               : is_primitive_function(object)\n               ? \"< primitive-function >\"\n               : is_pair(object)\n               ? pair(prepare(head(object)),\n                      prepare(tail(object)))\n               : object;\n    }\n    display(string + \" \" + stringify(prepare(object)));\n} "}]},{"tag":"TEXT","id":"#p9","child":[{"body":"\n    Now all we need to do to run the evaluator is to initialize the global\n    environment and start the driver loop.  Here is a sample interaction:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":8,"eval":true,"prependLength":502,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqSlbdpzk2DgIgoitbmEj7WfiGqLQEKsObwjn4o7Xf2s7j4dnsCT2ZkmobC4z4us9+0Qg5kgVQfTzOdZbquHMTlz24+UP80t4tFFuJvo9163y7Z14++2t3eP4oQVlABglhXWhSY-I8oJWWs4SSYPCecDWi0zY+OdAHZyHIYg2DC6ldk0cVGuawJSDC6QP8-ixwbWy3t0XekETzQj-v-QIF8My+3XEfJ4Ok-wzDAUBVC84vgblQUSX0nQvysxvukb+0hpDK1XoJNWSo+ztiIkDIeoBU6gASrnahZR4q0GjN+KujDWxLADLnTekht6gM-AfaEigErdRTtCCKZAEL3CQhtJg0VMG-CcHIzCG1nRthkHZCYI8jjXgSkjDK3k2q5RQrw3RkCoH-w0Qol2gMaq2I+OzMhH1VE-XsdQRR4prZ+iaFJU+vUDKAI6P6GGoBiIACpvG+OicRXQ4TAko3IUSdCk0S5+3yjhfW9DQY2jtE4OurQlAF0mlcY0ppuSsxsS41xrxUnvVVuheRPi8oblya8YOjCc7RQLm0pC64W5GkhKeHGfJ6kWCFFXQZK5knNHrnM4ZCzFagCGvHEGIT7BDTIc0teIh0bYPGcfPG9C5m4P9C3Aqkxjl3lWbUvOkwC53MGqU0ZJooTAQmfPQwdTzAzP8I7CUq11quzegQTSTBCCsA4FAOAiBkDoCwAAJjSevImkgQQgg2i4L6tDyb2krCCe25gz7ukkDlb8oAABkNLQBk1EJIPxrMoqRWioSp8WK9kfRmGEOk+CQLBInPYTF2LcWYNocRflHhpBPRXh4twArrmsuMAEfR2yGVMr8ZWaggqflNI+oU+0MrPBDVJSFEVn1viKGlUq2ViT1mlMNS0mY-Qr5PGFX1MVOLvKSpwsRd18qVYHPsMavoXp-F4ItaDSVgavSOoWS60NG8AnNB+u66l+TNWMuZYoXV+rr7JoofBTCKFVUaqtT6iV+KA3LMSMG-ZJb63vgeUK7NVrc06spV+Lt+ae3fh0qkj6Lbs7vMqWMmp7bK19T7QW-terB3FvSSg0R4DvnXy9QZatfra1nhIqnIRPxXkcVAAAHzPY2HdeKbUBqkKZSQLZ7QnqMBeq9zhiW+pvZ0-dUS4ovp5S015lymhZpnQZBZajM1zoHQQ4dQG11ARGROz5JzPUdtndqhdX551wcAym8Nh73yvMUO63QQ0PnVNIDGzVcaiPHsQ0SR1ZGnXTRQ1R5dGLnDhn1IadjXywNbKrR+rFX7-W-ula6PjEJUP0EbR4qTFKyrehxAshBcot1hrmFGq5GavS6Bg4uvDCqWk8cjBwmM06hOYbzfO3DIEdL4ZLeGsz0mqkCdKl6CquhJGaetRuSTEY3OTtII6zz5UMSA0kU5ldzh-2MbQxp4wABIdV1nt0ifFbu29En4v73XfJlpeXAI4MzRW9L9hVFWEILQjA8GU3FbESucLKn1MbD81V1atCUX1ZLY19d7DOHlYJrRr6xSus4QAMy9fScVp8tAxRR2I5+QTI2rWEZkUeveJWHjOMuqG7bTWI0DFqXtlzin+O7c-v1pDLWKqKz2wEG7OCEpLpi1x8bIq4FCx+Qbcln6a05YmSRTJlZS5aEKymipMmqOrctTZ7tRmHPvZEDMHmdNsabowxlrlWXv1SvR6qZol25OvsvQKa94ngdRMJ3zb7EOZvr1p9LEyG1qDMw9UlwosaxvVdq4zkQzP6aLctj+37Q8ec+z5zhHr7iWlC4iLLDE8tOftYl6NqXE3f3TZR6K8+Y8tY61Jf90TgONwBxIjA4skOS1W-tFk+Bs8jcmAsNznNWH50B0cyZhrRd6fm7nn993ebY4C-sJPf3gJQ9B6tZ7uecuU0mzNsZO3TvA4x+9ZkH+ae9F8V5dxhCU9wcB9tsbzVbrs9x9L5x1HzhWFw-hzjgH2WxenKiawm36TWGDcs+L8D9hDOFsQQn5ztp7T14d2r-v-nbUd6SWD7JSRdc6lpJiBkeICRoNVal13FWdRyOYMZVf9IcQb5ZFO37b6Kd1834f7o6I1+n6ZJv6CIER+xfUVkO-x+sRP4aC-xLNXHfcwafSnPdanUiL-I-B-E-Rkf-c-ULMPZsW-aAukX-OA5kLfdtYAp5NbTPXHMTcAtvYiTA7-GA9As-ICTvdeH-BkNtPvPfTrGrHCOrd-deLub6GAiUBvSXH4aXX9WXH3W3Q8SWe-Okbg4bMlDXPgrXanHXFeJtdJcNYSdnNBVqGHL5cSUER+RISjL5IJbHSrfFYiFQ5mFYRJR7dQ9zFYLQkEHQ98EnRgGvewWgv-TAnBNkUwrAhgiwRhVw3OVwkDIfOUKuclA-VAx-DAgAi-a+NCZQjkVQp0cNTNVw5KKZAISVDgsQjwCQhzQhMGMfdkBYRIh4ZIyNVI-5FxTIv3Y-XIn5So9IjeEQzKWollPI5fGYLw1-HwxvPXAgs3KVLo8wpAqwkLOHUGQfQdNgoSUEPQw+cY4PRHHDWDdohQyFVWaFWFTgBFHgZFNASbdFWvJ8EmcmfYS4GjYTdhJoJlVYc43ArYEIS4P8Q6QiS4EiRoa4oRMQa4Q8BQd+EKYsagdScUago4wgXRM46SXo0AAAQh1GJlJgpkUHOM4lABDVHyKU0kUDu0ix8wszOWnzo28C8h8lDTC09AiwzjxOjHjjz1dQ8mJMyixMIAuPwOb3x0IAPUZO8k0lBPsBKgpNaxvChN4PGxq05NAFYLRMOP5NVh72FJd1FL5wlNl2lMUPYLlPMQ6hnBZMVOkLFJvF0B1zVKNUKJKWiC8C0Cn0YOMPNLaEdRfFmiQNrm2WuXNT8zAJtQ2SiTtNED5N6JGUdJnHdMMK1VswHXNWcL0CPFoHuFIDBC1I6QOG6TVVBnnRmRNKKz9xhUjTyWhL7QzLekYU5VNlUHNkTPXFzmIVIRlIKMxOUx00CXI1KQMOhI9CpTU2bOiDskzIa2UyCMqmUxFMWJvCHNRPRNm37KGkHK9GHNjwHRzJyC4l7JLXSjfiynEHaiTM7NYyiwQntDyUJM0BBHJkbIDCMHZRUWPNPKiCkjQnbMInDUXPaDTUBlvJ-HqH3I3PyOkGvLJjPKCQAB5Qg-zFB3y0IXjbUsRaACjSAagbI7D4EN5KhiiNp0hiJQAABqe42qb4UyeMuSfYNTIwbCx1DC7Cx7CwPCgkEEQisC3RJBPCZgAiKC0oIgUQSiBC+w3WZChItCqJLCnCoqaigiwgIi18kiqJEiQSyi8wES2isS+i88qM1scoSoII65BZAkp7FpMYFwUoCGQ8yYD6QRVYHc985OB2cvLPEhACm+SYCkfQfStEZMmMuMhM7KCxGcdmWSpsBZNlaKPtYi3ykIPtcCz+dIUy7DOy3Qedd8qRIoPiSYT2MYAK0AEs5PDcrc9cC1Z5Zio6LSqJMgRoLyUAINBKlId2JOehQKGRFgL0XOLI585MwwReFIUGKK58gc0c2c3QLq6cnqpciqwIJKpePfPS1SwyheBQkdTCDS+uQqqIbSlqXSpyyalq3KlalNKK8yhiyy9q6yvobPYKz+Ry8QZyqatymirKry-KHyiK1NPBNKoKiSkKpon4MK6xVjeypaDeLeaK4i2KiMhi4a-uS0FK-QNKjKss4yCs60gUSCwqyAkqiUMqhq5iQyMtBtUG7aAefawIRhZ8xq7MhswFUMDq-6rqtTQa1uPqqclsmm73SYUal6afCagyjavZdY0NTY9gbY7gJFPgXAdUo45SVSGgdSUkihY6ajD0zLQgm1ayYiMW8yRtEW+wFWiW+0FSBYRfNQpKPUztD3BcpKZcosuqzWoEiyHm3OSVfkONLtR1CwLtFKNIwIONAtJ28wAtV2-5ONB8r20AB832+24wzBQOzBEOooONCvEhR1WO6QD4N2jI4wyUBgBYSQGoR1NOjO+CrYZOiwONF4r2l40MAu8wONG0cmWYeoBgRJKusmGupgSYcumfYiTCwOiwZE3QGoC82GBibCvO1uuNRiTu8wbu0AXuyJBiFiIev24wxicIr2hiAISKWGcwFiFe4e4whJXQFICeqete0ABiaJSe8wbem1YiYAMehSN4yevu4+0AMAOe0Oy+gAUhvoPofoYjfrPtAAvoC0vM7q-unrSt7vnsvphPZWAbvsPv7thPZXvogYC0As-tge-tAGAvMHAdfpQcijHpAaPoYkAuiiQdwdtWhjQZ7owfXrIejuMOhnwb3oCEIfgcYewYAdtRhJvsftXtobhPMHOP5G6kYUtslrijUyigmEAS7V0DEetooT0VEdMnFqtqlpwVoHqAACtfjlFpHtNBBIl-aVHVaDNjbF0upKj5H1HD5uocBlGzItbFs3weKVF8U40nYwVHVPGXZW70i41IBSBnY3As697Angmbo-GplK75BG7YBIAvaG6nB4mon6kYnq6ABRQOpJjJ1Jqo4wgAOUkAKZvqKYKZ+s-hEYtpMacfowHKkYCEAXIEiT7XIB-GsfoyUeqccbUbqenIaYAW02aaPsmLafaZqd6c2xrDsZHQ5GMmseZJOgQswVZIMiMicAJE-wPGYBEmuq0ckCkE3lMjLJuVSmsZ1t-PXH1uo1sJWeX2TBsCqDhvylWbVkuFMRuu1Pylfm4IWblM7N8uag6ameLgkoaKgR+b8T+YO00Z0aoCcUaI+GBdfC22nLyc-mhvLM8q+aXwUOLMZScBBFbE-OJ2xY6QEV6iebJZQhmZaWIGTBxGUnyhuDUCbnwpBF0Fhd+ItQ+jZHkppG0e5fxvJU8iZNVgFbhbGlShCGIkAtFfFEYk0kob21FGhelq5aoAqdviiUAvkcVdVmVaKlVcpUIg1alZShlYAG1yL0qFt+W+0zWg5SKSJAXBK+XiYaLorHXJLiIABdYiFVjeD10S-YR1quFm0AHOl0fYYiZiON+NhNxNpN0e8F8wFls2CsdlwS4iAAHVCzdbteDZBAlaFdIrzbVo+npZ9CsDzXTbLMzZoteaDthRObrbZcbb2UYQJFUF3jbdzmIgAFlGIw4HBSAe3KB0LuI-DSZx2TJWX+2h2R2hpJ3azxRTJ1IcR1qjLfC6ru3SZc4q2cQa2-E92fg23hqa4bKvxT225LQo3M7bU424ZsR0qMRVJCQNp7oU2ol5V+5dpqq73HBc7H3k3QOwOLDapT252zZs3y3BLT3YPEC2qGFqnaAQQypc5SpkxFIx3SYcbzAeEdF+FopTKQEGN8sgJAQWX0Psh8OUPXxQA4lHFbaxsvEshNE-ErFzzkPlG0OyoNzc41zMpnmNxXWBQuPAYmOlFNkihp3KBx3BP-hqRqOyo5HWAaO2BvzkPD2TICQNwd55Pe2W2hwDPx26PQY12rbN2OaVPsgtPl4+JiJypJByAcoH5jxn3mAShmUNpiJuIcBLON2Lr80CWiXNGIgROuIgA","body":"const the_global_environment = setup_environment();\ndriver_loop(the_global_environment); "},{"tag":"SNIPPET","latex":false,"id":9,"eval":true,"body":"function append(xs, ys) { \n    return is_null(xs)\n           ? ys\n           : pair(head(xs), append(tail(xs), ys)); \n} ","prependLength":504,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqSlbdpzk2DgIgoitbmEj7WfiGqLQEKsObwjn4o7Xf2s7j4dnsCT2ZkmobC4z4us9+0Qg5kgVQfTzOdZbquHMTlz24+UP80t4tFFuJvo9163y7Z14++2t3eP4oQVlABglhXWhSY-I8oJWWs4SSYPCecDWi0zY+OdAHZyHIYg2DC6ldk0cVGuawJSDC6QP8-ixwbWy3t0XekETzQj-v-QIF8My+3XEfJ4Ok-wzDAUBVC84vgblQUSX0nQvysxvukb+0hpDK1XoJNWSo+ztiIkDIeoBU6gASrnahZR4q0GjN+KujDWxLADLnTekht6gM-AfaEigErdRTtCCKZAEL3CQhtJg0VMG-CcHIzCG1nRthkHZCYI8jjXgSkjDK3k2q5RQrw3RkCoH-w0Qol2gMaq2I+OzMhH1VE-XsdQRR4prZ+iaFJU+vUDKAI6P6GGoBiIACpvG+OicRXQ4TAko3IUSdCk0S5+3yjhfW9DQY2jtE4OurQlAF0mlcY0ppuSsxsS41xrxUnvVVuheRPi8oblya8YOjCc7RQLm0pC64W5GkhKeHGfJ6kWCFFXQZK5knNHrnM4ZCzFagCGvHEGIT7BDTIc0teIh0bYPGcfPG9C5m4P9C3Aqkxjl3lWbUvOkwC53MGqU0ZJooTAQmfPQwdTzAzP8I7CUq11quzegQTSTBCCsA4FAOAiBkDoCwAAJjSevImkgQQgg2i4L6tDyb2krCCe25gz7ukkDlb8oAABkNLQBk1EJIPxrMoqRWioSp8WK9kfRmGEOk+CQLBInPYTF2LcWYNocRflHhpBPRXh4twArrmsuMAEfR2yGVMr8ZWaggqflNI+oU+0MrPBDVJSFEVn1viKGlUq2ViT1mlMNS0mY-Qr5PGFX1MVOLvKSpwsRd18qVYHPsMavoXp-F4ItaDSVgavSOoWS60NG8AnNB+u66l+TNWMuZYoXV+rr7JoofBTCKFVUaqtT6iV+KA3LMSMG-ZJb63vgeUK7NVrc06spV+Lt+ae3fh0qkj6Lbs7vMqWMmp7bK19T7QW-terB3FvSSg0R4DvnXy9QZatfra1nhIqnIRPxXkcVAAAHzPY2HdeKbUBqkKZSQLZ7QnqMBeq9zhiW+pvZ0-dUS4ovp5S015lymhZpnQZBZajM1zoHQQ4dQG11ARGROz5JzPUdtndqhdX551wcAym8Nh73yvMUO63QQ0PnVNIDGzVcaiPHsQ0SR1ZGnXTRQ1R5dGLnDhn1IadjXywNbKrR+rFX7-W-ula6PjEJUP0EbR4qTFKyrehxAshBcot1hrmFGq5GavS6Bg4uvDCqWk8cjBwmM06hOYbzfO3DIEdL4ZLeGsz0mqkCdKl6CquhJGaetRuSTEY3OTtII6zz5UMSA0kU5ldzh-2MbQxp4wABIdV1nt0ifFbu29En4v73XfJlpeXAI4MzRW9L9hVFWEILQjA8GU3FbESucLKn1MbD81V1atCUX1ZLY19d7DOHlYJrRr6xSus4QAMy9fScVp8tAxRR2I5+QTI2rWEZkUeveJWHjOMuqG7bTWI0DFqXtlzin+O7c-v1pDLWKqKz2wEG7OCEpLpi1x8bIq4FCx+Qbcln6a05YmSRTJlZS5aEKymipMmqOrctTZ7tRmHPvZEDMHmdNsabowxlrlWXv1SvR6qZol25OvsvQKa94ngdRMJ3zb7EOZvr1p9LEyG1qDMw9UlwosaxvVdq4zkQzP6aLctj+37Q8ec+z5zhHr7iWlC4iLLDE8tOftYl6NqXE3f3TZR6K8+Y8tY61Jf90TgONwBxIjA4skOS1W-tFk+Bs8jcmAsNznNWH50B0cyZhrRd6fm7nn993ebY4C-sJPf3gJQ9B6tZ7uecuU0mzNsZO3TvA4x+9ZkH+ae9F8V5dxhCU9wcB9tsbzVbrs9x9L5x1HzhWFw-hzjgH2WxenKiawm36TWGDcs+L8D9hDOFsQQn5ztp7T14d2r-v-nbUd6SWD7JSRdc6lpJiBkeICRoNVal13FWdRyOYMZVf9IcQb5ZFO37b6Kd1834f7o6I1+n6ZJv6CIER+xfUVkO-x+sRP4aC-xLNXHfcwafSnPdanUiL-I-B-E-Rkf-c-ULMPZsW-aAukX-OA5kLfdtYAp5NbTPXHMTcAtvYiTA7-GA9As-ICTvdeH-BkNtPvPfTrGrHCOrd-deLub6GAiUBvSXH4aXX9WXH3W3Q8SWe-Okbg4bMlDXPgrXanHXFeJtdJcNYSdnNBVqGHL5cSUER+RISjL5IJbHSrfFYiFQ5mFYRJR7dQ9zFYLQkEHQ98EnRgGvewWgv-TAnBNkUwrAhgiwRhVw3OVwkDIfOUKuclA-VAx-DAgAi-a+NCZQjkVQp0cNTNVw5KKZAISVDgsQjwCQhzQhMGMfdkBYRIh4ZIyNVI-5FxTIv3Y-XIn5So9IjeEQzKWollPI5fGYLw1-HwxvPXAgs3KVLo8wpAqwkLOHUGQfQdNgoSUEPQw+cY4PRHHDWDdohQyFVWaFWFTgBFHgZFNASbdFWvJ8EmcmfYS4GjYTdhJoJlVYc43ArYEIS4P8Q6QiS4EiRoa4oRMQa4Q8BQd+EKYsagdScUago4wgXRM46SXo0AAAQh1GJlJgpkUHOM4lABDVHyKU0kUDu0ix8wszOWnzo28C8h8lDTC09AiwzjxOjHjjz1dQ8mJMyixMIAuPwOb3x0IAPUZO8k0lBPsBKgpNaxvChN4PGxq05NAFYLRMOP5NVh72FJd1FL5wlNl2lMUPYLlPMQ6hnBZMVOkLFJvF0B1zVKNUKJKWiC8C0Cn0YOMPNLaEdRfFmiQNrm2WuXNT8zAJtQ2SiTtNED5N6JGUdJnHdMMK1VswHXNWcL0CPFoHuFIDBC1I6QOG6TVVBnnRmRNKKz9xhUjTyWhL7QzLekYU5VNlUHNkTPXFzmIVIRlIKMxOUx00CXI1KQMOhI9CpTU2bOiDskzIa2UyCMqmUxFMWJvCHNRPRNm37KGkHK9GHNjwHRzJyC4l7JLXSjfiynEHaiTM7NYyiwQntDyUJM0BBHJkbIDCMHZRUWPNPKiCkjQnbMInDUXPaDTUBlvJ-HqH3I3PyOkGvLJjPKCQAB5Qg-zFB3y0IXjbUsRaACjSAagbI7D4EN5KhiiNp0hiJQAABqe42qb4UyeMuSfYNTIwbCx1DC7Cx7CwPCgkEEQisC3RJBPCZgAiKC0oIgUQSiBC+w3WZChItCqJLCnCoqaigiwgIi18kiqJEiQSyi8wES2isS+i88qM1scoSoII65BZAkp7FpMYFwUoCGQ8yYD6QRVYHc985OB2cvLPEhACm+SYCkfQfStEZMmMuMhM7KCxGcdmWSpsBZNlaKPtYi3ykIPtcCz+dIUy7DOy3Qedd8qRIoPiSYT2MYAK0AEs5PDcrc9cC1Z5Zio6LSqJMgRoLyUAINBKlId2JOehQKGRFgL0XOLI585MwwReFIUGKK58gc0c2c3QLq6cnqpciqwIJKpePfPS1SwyheBQkdTCDS+uQqqIbSlqXSpyyalq3KlalNKK8yhiyy9q6yvobPYKz+Ry8QZyqatymirKry-KHyiK1NPBNKoKiSkKpon4MK6xVjeypaDeLeaK4i2KiMhi4a-uS0FK-QNKjKss4yCs60gUSCwqyAkqiUMqhq5iQyMtBtUG7aAefawIRhZ8xq7MhswFUMDq-6rqtTQa1uPqqclsmm73SYUal6afCagyjavZdY0NTY9gbY7gJFPgXAdUo45SVSGgdSUkihY6ajD0zLQgm1ayYiMW8yRtEW+wFWiW+0FSBYRfNQpKPUztD3BcpKZcosuqzWoEiyHm3OSVfkONLtR1CwLtFKNIwIONAtJ28wAtV2-5ONB8r20AB832+24wzBQOzBEOooONCvEhR1WO6QD4N2jI4wyUBgBYSQGoR1NOjO+CrYZOiwONF4r2l40MAu8wONG0cmWYeoBgRJKusmGupgSYcumfYiTCwOiwZE3QGoC82GBibCvO1uuNRiTu8wbu0AXuyJBiFiIev24wxicIr2hiAISKWGcwFiFe4e4whJXQFICeqete0ABiaJSe8wbem1YiYAMehSN4yevu4+0AMAOe0Oy+gAUhvoPofoYjfrPtAAvoC0vM7q-unrSt7vnsvphPZWAbvsPv7thPZXvogYC0As-tge-tAGAvMHAdfpQcijHpAaPoYkAuiiQdwdtWhjQZ7owfXrIejuMOhnwb3oCEIfgcYewYAdtRhJvsftXtobhPMHOP5G6kYUtslrijUyigmEAS7V0DEetooT0VEdMnFqtqlpwVoHqAACtfjlFpHtNBBIl-aVHVaDNjbF0upKj5H1HD5uocBlGzItbFs3weKVF8U40nYwVHVPGXZW70i41IBSBnY3As697Angmbo-GplK75BG7YBIAvaG6nB4mon6kYnq6ABRQOpJjJ1Jqo4wgAOUkAKZvqKYKZ+s-hEYtpMacfowHKkYCEAXIEiT7XIB-GsfoyUeqccbUbqenIaYAW02aaPsmLafaZqd6c2xrDsZHQ5GMmseZJOgQswVZIMiMicAJE-wPGYBEmuq0ckCkE3lMjLJuVSmsZ1t-PXH1uo1sJWeX2TBsCqDhvylWbVkuFMRuu1Pylfm4IWblM7N8uag6ameLgkoaKgR+b8T+YO00Z0aoCcUaI+GBdfC22nLyc-mhvLM8q+aXwUOLMZScBBFbE-OJ2xY6QEV6iebJZQhmZaWIGTBxGUnyhuDUCbnwpBF0Fhd+ItQ+jZHkppG0e5fxvJU8iZNVgFbhbGlShCGIkAtFfFEYk0kob21FGhelq5aoAqdviiUAvkcVdVmVaKlVcpUIg1alZShlYAG1yL0qFt+W+0zWg5SKSJAXBK+XiYaLorHXJLiIABdYiFVjeD10S-YR1quFm0AHOl0fYYiZiON+NhNxNpN0e8F8wFls2CsdlwS4iAAHVCzdbteDZBAlaFdIrzbVo+npZ9CsDzXTbLMzZoteaDthRObrbZcbb2UYQJFUF3jbdzmIgAFlGIw4HBSAe3KB0LuI-DSZx2TJWX+2h2R2hpJ3azxRTJ1IcR1qjLfC6ru3SZc4q2cQa2-E92fg23hqa4bKvxT225LQo3M7bU424ZsR0qMRVJCQNp7oU2ol5V+5dpqq73HBc7H3k3QOwOLDapT252zZs3y3BLT3YPEC2qGFqnaAQQypc5SpkxFIx3SYcbzAeEdF+FopTKQEGN8sgJAQWX0Psh8OUPXxQA4lHFbaxsvEshNE-ErFzzkPlG0OyoNzc41zMpnmNxXWBQuPAYmOlFNkihp3KBx3BP-hqRqOyo5HWAaO2BvzkPD2TICQNwd55Pe2W2hwDPx26PQY12rbN2OaVPsgtPl4+JiJypJByAcoH5jxn3mAShmUNpiJuIcBLON2Lr80CWiXNGIgRO7GCB3MokAAlMgDCrEIN4ECKQlSN9djEEoNEfAMARdpThQUd8d1IHL-bZteYN+ZEwGGoVs8lasyrowEIarpsB8xQPtS4CuSF6K9rn8arxzaUggPLwxFyZdkrnxjaPAAb4d-LlyU94rggTruNSQMi+oMi8gDiXQONEEkiP0kiQgDibqSbpd0pObsAa1pb3Qa1lbi74iNb67rb0Aa1nbh74iPb3Qas31j7z7oAA","output":"M-evaluate value:\nundefined"},{"tag":"SNIPPET","latex":false,"id":10,"eval":true,"body":"append(list(\"a\", \"b\", \"c\"), list(\"d\", \"e\", \"f\")); ","prependLength":504,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqSlbdpzk2DgIgoitbmEj7WfiGqLQEKsObwjn4o7Xf2s7j4dnsCT2ZkmobC4z4us9+0Qg5kgVQfTzOdZbquHMTlz24+UP80t4tFFuJvo9163y7Z14++2t3eP4oQVlABglhXWhSY-I8oJWWs4SSYPCecDWi0zY+OdAHZyHIYg2DC6ldk0cVGuawJSDC6QP8-ixwbWy3t0XekETzQj-v-QIF8My+3XEfJ4Ok-wzDAUBVC84vgblQUSX0nQvysxvukb+0hpDK1XoJNWSo+ztiIkDIeoBU6gASrnahZR4q0GjN+KujDWxLADLnTekht6gM-AfaEigErdRTtCCKZAEL3CQhtJg0VMG-CcHIzCG1nRthkHZCYI8jjXgSkjDK3k2q5RQrw3RkCoH-w0Qol2gMaq2I+OzMhH1VE-XsdQRR4prZ+iaFJU+vUDKAI6P6GGoBiIACpvG+OicRXQ4TAko3IUSdCk0S5+3yjhfW9DQY2jtE4OurQlAF0mlcY0ppuSsxsS41xrxUnvVVuheRPi8oblya8YOjCc7RQLm0pC64W5GkhKeHGfJ6kWCFFXQZK5knNHrnM4ZCzFagCGvHEGIT7BDTIc0teIh0bYPGcfPG9C5m4P9C3Aqkxjl3lWbUvOkwC53MGqU0ZJooTAQmfPQwdTzAzP8I7CUq11quzegQTSTBCCsA4FAOAiBkDoCwAAJjSevImkgQQgg2i4L6tDyb2krCCe25gz7ukkDlb8oAABkNLQBk1EJIPxrMoqRWioSp8WK9kfRmGEOk+CQLBInPYTF2LcWYNocRflHhpBPRXh4twArrmsuMAEfR2yGVMr8ZWaggqflNI+oU+0MrPBDVJSFEVn1viKGlUq2ViT1mlMNS0mY-Qr5PGFX1MVOLvKSpwsRd18qVYHPsMavoXp-F4ItaDSVgavSOoWS60NG8AnNB+u66l+TNWMuZYoXV+rr7JoofBTCKFVUaqtT6iV+KA3LMSMG-ZJb63vgeUK7NVrc06spV+Lt+ae3fh0qkj6Lbs7vMqWMmp7bK19T7QW-terB3FvSSg0R4DvnXy9QZatfra1nhIqnIRPxXkcVAAAHzPY2HdeKbUBqkKZSQLZ7QnqMBeq9zhiW+pvZ0-dUS4ovp5S015lymhZpnQZBZajM1zoHQQ4dQG11ARGROz5JzPUdtndqhdX551wcAym8Nh73yvMUO63QQ0PnVNIDGzVcaiPHsQ0SR1ZGnXTRQ1R5dGLnDhn1IadjXywNbKrR+rFX7-W-ula6PjEJUP0EbR4qTFKyrehxAshBcot1hrmFGq5GavS6Bg4uvDCqWk8cjBwmM06hOYbzfO3DIEdL4ZLeGsz0mqkCdKl6CquhJGaetRuSTEY3OTtII6zz5UMSA0kU5ldzh-2MbQxp4wABIdV1nt0ifFbu29En4v73XfJlpeXAI4MzRW9L9hVFWEILQjA8GU3FbESucLKn1MbD81V1atCUX1ZLY19d7DOHlYJrRr6xSus4QAMy9fScVp8tAxRR2I5+QTI2rWEZkUeveJWHjOMuqG7bTWI0DFqXtlzin+O7c-v1pDLWKqKz2wEG7OCEpLpi1x8bIq4FCx+Qbcln6a05YmSRTJlZS5aEKymipMmqOrctTZ7tRmHPvZEDMHmdNsabowxlrlWXv1SvR6qZol25OvsvQKa94ngdRMJ3zb7EOZvr1p9LEyG1qDMw9UlwosaxvVdq4zkQzP6aLctj+37Q8ec+z5zhHr7iWlC4iLLDE8tOftYl6NqXE3f3TZR6K8+Y8tY61Jf90TgONwBxIjA4skOS1W-tFk+Bs8jcmAsNznNWH50B0cyZhrRd6fm7nn993ebY4C-sJPf3gJQ9B6tZ7uecuU0mzNsZO3TvA4x+9ZkH+ae9F8V5dxhCU9wcB9tsbzVbrs9x9L5x1HzhWFw-hzjgH2WxenKiawm36TWGDcs+L8D9hDOFsQQn5ztp7T14d2r-v-nbUd6SWD7JSRdc6lpJiBkeICRoNVal13FWdRyOYMZVf9IcQb5ZFO37b6Kd1834f7o6I1+n6ZJv6CIER+xfUVkO-x+sRP4aC-xLNXHfcwafSnPdanUiL-I-B-E-Rkf-c-ULMPZsW-aAukX-OA5kLfdtYAp5NbTPXHMTcAtvYiTA7-GA9As-ICTvdeH-BkNtPvPfTrGrHCOrd-deLub6GAiUBvSXH4aXX9WXH3W3Q8SWe-Okbg4bMlDXPgrXanHXFeJtdJcNYSdnNBVqGHL5cSUER+RISjL5IJbHSrfFYiFQ5mFYRJR7dQ9zFYLQkEHQ98EnRgGvewWgv-TAnBNkUwrAhgiwRhVw3OVwkDIfOUKuclA-VAx-DAgAi-a+NCZQjkVQp0cNTNVw5KKZAISVDgsQjwCQhzQhMGMfdkBYRIh4ZIyNVI-5FxTIv3Y-XIn5So9IjeEQzKWollPI5fGYLw1-HwxvPXAgs3KVLo8wpAqwkLOHUGQfQdNgoSUEPQw+cY4PRHHDWDdohQyFVWaFWFTgBFHgZFNASbdFWvJ8EmcmfYS4GjYTdhJoJlVYc43ArYEIS4P8Q6QiS4EiRoa4oRMQa4Q8BQd+EKYsagdScUago4wgXRM46SXo0AAAQh1GJlJgpkUHOM4lABDVHyKU0kUDu0ix8wszOWnzo28C8h8lDTC09AiwzjxOjHjjz1dQ8mJMyixMIAuPwOb3x0IAPUZO8k0lBPsBKgpNaxvChN4PGxq05NAFYLRMOP5NVh72FJd1FL5wlNl2lMUPYLlPMQ6hnBZMVOkLFJvF0B1zVKNUKJKWiC8C0Cn0YOMPNLaEdRfFmiQNrm2WuXNT8zAJtQ2SiTtNED5N6JGUdJnHdMMK1VswHXNWcL0CPFoHuFIDBC1I6QOG6TVVBnnRmRNKKz9xhUjTyWhL7QzLekYU5VNlUHNkTPXFzmIVIRlIKMxOUx00CXI1KQMOhI9CpTU2bOiDskzIa2UyCMqmUxFMWJvCHNRPRNm37KGkHK9GHNjwHRzJyC4l7JLXSjfiynEHaiTM7NYyiwQntDyUJM0BBHJkbIDCMHZRUWPNPKiCkjQnbMInDUXPaDTUBlvJ-HqH3I3PyOkGvLJjPKCQAB5Qg-zFB3y0IXjbUsRaACjSAagbI7D4EN5KhiiNp0hiJQAABqe42qb4UyeMuSfYNTIwbCx1DC7Cx7CwPCgkEEQisC3RJBPCZgAiKC0oIgUQSiBC+w3WZChItCqJLCnCoqaigiwgIi18kiqJEiQSyi8wES2isS+i88qM1scoSoII65BZAkp7FpMYFwUoCGQ8yYD6QRVYHc985OB2cvLPEhACm+SYCkfQfStEZMmMuMhM7KCxGcdmWSpsBZNlaKPtYi3ykIPtcCz+dIUy7DOy3Qedd8qRIoPiSYT2MYAK0AEs5PDcrc9cC1Z5Zio6LSqJMgRoLyUAINBKlId2JOehQKGRFgL0XOLI585MwwReFIUGKK58gc0c2c3QLq6cnqpciqwIJKpePfPS1SwyheBQkdTCDS+uQqqIbSlqXSpyyalq3KlalNKK8yhiyy9q6yvobPYKz+Ry8QZyqatymirKry-KHyiK1NPBNKoKiSkKpon4MK6xVjeypaDeLeaK4i2KiMhi4a-uS0FK-QNKjKss4yCs60gUSCwqyAkqiUMqhq5iQyMtBtUG7aAefawIRhZ8xq7MhswFUMDq-6rqtTQa1uPqqclsmm73SYUal6afCagyjavZdY0NTY9gbY7gJFPgXAdUo45SVSGgdSUkihY6ajD0zLQgm1ayYiMW8yRtEW+wFWiW+0FSBYRfNQpKPUztD3BcpKZcosuqzWoEiyHm3OSVfkONLtR1CwLtFKNIwIONAtJ28wAtV2-5ONB8r20AB832+24wzBQOzBEOooONCvEhR1WO6QD4N2jI4wyUBgBYSQGoR1NOjO+CrYZOiwONF4r2l40MAu8wONG0cmWYeoBgRJKusmGupgSYcumfYiTCwOiwZE3QGoC82GBibCvO1uuNRiTu8wbu0AXuyJBiFiIev24wxicIr2hiAISKWGcwFiFe4e4whJXQFICeqete0ABiaJSe8wbem1YiYAMehSN4yevu4+0AMAOe0Oy+gAUhvoPofoYjfrPtAAvoC0vM7q-unrSt7vnsvphPZWAbvsPv7thPZXvogYC0As-tge-tAGAvMHAdfpQcijHpAaPoYkAuiiQdwdtWhjQZ7owfXrIejuMOhnwb3oCEIfgcYewYAdtRhJvsftXtobhPMHOP5G6kYUtslrijUyigmEAS7V0DEetooT0VEdMnFqtqlpwVoHqAACtfjlFpHtNBBIl-aVHVaDNjbF0upKj5H1HD5uocBlGzItbFs3weKVF8U40nYwVHVPGXZW70i41IBSBnY3As697Angmbo-GplK75BG7YBIAvaG6nB4mon6kYnq6ABRQOpJjJ1Jqo4wgAOUkAKZvqKYKZ+s-hEYtpMacfowHKkYCEAXIEiT7XIB-GsfoyUeqccbUbqenIaYAW02aaPsmLafaZqd6c2xrDsZHQ5GMmseZJOgQswVZIMiMicAJE-wPGYBEmuq0ckCkE3lMjLJuVSmsZ1t-PXH1uo1sJWeX2TBsCqDhvylWbVkuFMRuu1Pylfm4IWblM7N8uag6ameLgkoaKgR+b8T+YO00Z0aoCcUaI+GBdfC22nLyc-mhvLM8q+aXwUOLMZScBBFbE-OJ2xY6QEV6iebJZQhmZaWIGTBxGUnyhuDUCbnwpBF0Fhd+ItQ+jZHkppG0e5fxvJU8iZNVgFbhbGlShCGIkAtFfFEYk0kob21FGhelq5aoAqdviiUAvkcVdVmVaKlVcpUIg1alZShlYAG1yL0qFt+W+0zWg5SKSJAXBK+XiYaLorHXJLiIABdYiFVjeD10S-YR1quFm0AHOl0fYYiZiON+NhNxNpN0e8F8wFls2CsdlwS4iAAHVCzdbteDZBAlaFdIrzbVo+npZ9CsDzXTbLMzZoteaDthRObrbZcbb2UYQJFUF3jbdzmIgAFlGIw4HBSAe3KB0LuI-DSZx2TJWX+2h2R2hpJ3azxRTJ1IcR1qjLfC6ru3SZc4q2cQa2-E92fg23hqa4bKvxT225LQo3M7bU424ZsR0qMRVJCQNp7oU2ol5V+5dpqq73HBc7H3k3QOwOLDapT252zZs3y3BLT3YPEC2qGFqnaAQQypc5SpkxFIx3SYcbzAeEdF+FopTKQEGN8sgJAQWX0Psh8OUPXxQA4lHFbaxsvEshNE-ErFzzkPlG0OyoNzc41zMpnmNxXWBQuPAYmOlFNkihp3KBx3BP-hqRqOyo5HWAaO2BvzkPD2TICQNwd55Pe2W2hwDPx26PQY12rbN2OaVPsgtPl4+JiJypJByAcoH5jxn3mAShmUNpiJuIcBLON2Lr80CWiXNGIgRO7GCB3MokAAlMgDCrEIN4ECKQlSN9djEEoNEfAMARdpThQUd8d1IHL-bZteYN+ZEwGGoVs8lasyrowEIarpsB8xQPtS4CuSF6K9rn8arxzaUggPLwxFyZdkrnxjaPAAb4d-LlyU94rggTruNSQMi+oMi8gDiXQONEEkiP0kiQgDibqSbpd0pObsAa1pb3Qa1lbi74iNb67rb0Aa1nbh74iPb3Qas31j7z7oAA","output":"M-evaluate value: \n[\"a\", [\"b\", [\"c\", [\"d\", [\"e\", [\"f\", null]]]]]]"}]},{"tag":"EXERCISE","title":"Exercise 4.14","id":"#ex-4.14","child":[{"body":"\n    Eva Lu Ator and Louis Reasoner are each experimenting with the\n    metacircular evaluator.  Eva types in the definition of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":", and runs some test programs that use it.\n    They work fine.  Louis, in contrast, has installed the system version of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":" as a primitive for the metacircular\n    evaluator.  When he tries it, things go terribly wrong.  Explain why\n    Louis's ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":" fails even though\n    Eva's works.\n    ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-1","count":1,"href":"/sicpjs/4.1.4#footnote-link-1","child":[{"body":"Any\n    function\n    defined in the underlying\n    JavaScript\n    can be used as a primitive for the metacircular evaluator.  The name of a\n    primitive installed in the evaluator need not be the same as the name of its\n    implementation in the underlying\n    JavaScript;\n    the names are the same here because the metacircular evaluator implements\n    JavaScript    \n    itself.\n    Thus, for example, we could put \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list(\"first\", head)"},{"body":" \n    or \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list(\"square\", x => x * x)"},{"body":"\n    in the list of \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"primitive_functions"},{"body":".\n      ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-2","count":2,"href":"/sicpjs/4.1.4#footnote-link-2","child":[{"body":"\n        JavaScript's ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" method \n\texpects the function arguments in a ","tag":"#text"},{"tag":"EM","child":[{"body":"vector","tag":"#text"}]},{"body":". (Vectors\n\tare called \"arrays\" in JavaScript.)\n\tThus, the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"arglist"},{"body":" is transformed into \n        a\n\t\n\tvector—here using a while\n\tloop (see exercise ","tag":"#text"},{"tag":"REF","body":"4.7","href":"/sicpjs/4.1.2#ex-4.7"},{"body":"):\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nfunction apply_in_underlying_javascript(prim, arglist) {\n    const arg_vector = [];               // empty vector\n    let i = 0;\n    while (!is_null(arglist)) {\n        arg_vector[i] = head(arglist);   // store value at index $\\texttt{i}$\n        i = i + 1;\n        arglist = tail(arglist);\n    }\n    return prim.apply(prim, arg_vector); // $\\texttt{apply}$ is accessed via $\\texttt{prim}$\n}\n\t  "},{"body":"\n\tWe also made use of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply_in_underlying_javascript"},{"body":"\n\tto declare the function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply_generic"},{"body":"\n\tin section ","tag":"#text"},{"tag":"REF","body":"2.4.3","href":"/sicpjs/2.4.3"},{"body":".\n      ","tag":"#text"}]}]